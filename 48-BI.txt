// ANA KOD 

var
anaForm:TclForm;
btnGirisYap,btnSifreSimgesi,btnTikla:TClProButton;
EditKullaniciAdi,EditSifre:TclProEdit;
KullaniciAd,Sifre:String
clQuery:TclSQLQuery;


  function isAuth(AUserName,APassword:string):boolean;
  {
    KullaniciAd = EditKullaniciAdi.Text;
    Sifre = EditSifre.Text;

    clQuery=TclSQLQuery.Create(Nil);
    Try
      try
        clQuery.Connection = Clomosy.DBSQLServerConnection;
        clQuery.SQL.Text ='
        DECLARE @KullaniciAd NVARCHAR(30) = '+QuotedStr(KullaniciAd)+'; 
        DECLARE @Sifre NVARCHAR(30) = '+QuotedStr(Sifre)+'; 
        select count(*) kayitSayisi from  (SELECT KULLANICI_ADI as kullaniciAdi, KULLANICI_NO, KULLANICI_ISIM, KEY_USER,KULLANICI_YONETICISI,
       [KULL_S3] as KULL_S3, [SIFRE] as sifre,  DBO.AyoDecodeUser(SIFRE) as sifreCozulmus FROM [BITEK]..[TBLLOGINMAS]
       WHERE 1=1
       AND ISNULL(GECERLILIK_SONU,GETDATE()+1)>=GETDATE()
       AND (ISNULL(SON_GIRIS_ZAMAN,ISNULL(BT_DATE_1,GETDATE()))>=GETDATE()-90 OR ISNULL(REC_UPDATE,GETDATE())>=GETDATE()-9)
       AND KULLANICI_ADI=@KullaniciAd
       AND  DBO.AyoDecodeUser(SIFRE)= @Sifre ) as DATA';
        clQuery.Open;
        if clQuery.Found 
        {
          if not (clQuery.FieldByName('kayitSayisi').AsString == 1) 
            Result = False;
          else
            Result = True;
        }
        else
          Result = False;
      except
         ShowMessage('Exception Class: '+LastExceptionClassName+' Exception Message: '+LastExceptionMessage);
      }
    finally
     clQuery.Free;
    }
  }


 void GirisButonunaTiklandiginda;
 {
  btnTikla = TclProButton(anaForm.ClSender);
  if (EditKullaniciAdi.Text <> '')  
  {
    if isAuth(EditKullaniciAdi.Text,EditSifre.Text) 
    {
    clomosy.RunUnit('uLogin'); 
    anaForm.clhide;
    }
    else
    {
      ShowMessage('Kullanıcının Yetkisi Yok');
      exit;
    }
  }
  else
  {
    ShowMessage('Kullanıcı Bilgilerini Doldurun');
    exit;
  }

 }


void TiklandigindaSifreButtonDegisme;
{
  btnTikla = TclProButton(anaForm.ClSender);

  if (EditSifre.Password == True)
  {
    anaForm.SetImage(btnTikla, 'https://r.resimlink.com/_twLODGPxgXC.png'); 
    EditSifre.Password = False; 
  }
  else
  {
    anaForm.SetImage(btnTikla, 'https://r.resimlink.com/HY-oB0.png'); 
    EditSifre.Password = True; 
  }
}


{
  anaForm=TclForm.Create(Self);
  anaForm.SetFormColor('#a31231', '#a31231', clGVertical);

  anaForm.SetFormBGImage('https://r.resimlink.com/re6a-dB.png');

  Clomosy.GlobalVariableString='192.168.1.4';
  
  clQuery = TClSqlQuery.Create(nil);
  Clomosy.DBSQLServerConnect('SQL Server', 'UGUR\UGURSQL', 'sa', '123456', 'BITEK', 1433);
  clQuery.Connection = Clomosy.DBSQLServerConnection;
 
  btnGirisYap = anaForm.AddNewProButton(anaForm,'btnGirisYap','GİRİŞ YAP');
  btnGirisYap.Align = alCenter;
  btnGirisYap.Margins.Top=100;
  btnGirisYap.Margins.Right=115;
  btnGirisYap.Width = 140;
  btnGirisYap.Height = 60;
  btnGirisYap.clProSettings.BorderColor = clAlphaColor.clHexToColor('#ff0000');
  btnGirisYap.clProSettings.FontColor = clAlphaColor.clHexToColor('#000000');
  btnGirisYap.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#ffffff');
  btnGirisYap.clProSettings.RoundHeight = 10;
  btnGirisYap.clProSettings.RoundWidth = 10;
  btnGirisYap.clProSettings.BorderWidth = 3;
  btnGirisYap.clProSettings.FontSize = 16;
  btnGirisYap.SetclProSettings(btnGirisYap.clProSettings);
  
  btnSifreSimgesi = anaForm.AddNewProButton(anaForm,'btnSifreSimgesi','');
  btnSifreSimgesi.Align = alCenter;
  btnSifreSimgesi.Margins.Top=100;
  btnSifreSimgesi.Margins.Left=180;
  btnSifreSimgesi.Width = 80;
  btnSifreSimgesi.Height = 60;
  btnSifreSimgesi.clProSettings.BorderColor = clAlphaColor.clHexToColor('#ff0000');
  btnSifreSimgesi.clProSettings.FontColor = clAlphaColor.clHexToColor('#000000');
  btnSifreSimgesi.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#ffffff');
  btnSifreSimgesi.clProSettings.RoundHeight = 10;
  btnSifreSimgesi.clProSettings.RoundWidth = 10;
  btnSifreSimgesi.clProSettings.BorderWidth = 3;
  btnSifreSimgesi.SetclProSettings(btnSifreSimgesi.clProSettings);
  anaForm.SetImage(btnSifreSimgesi,'https://r.resimlink.com/HY-oB0.png');
  
  
 
  EditKullaniciAdi = anaForm.AddNewProEdit(anaForm,'EditKullaniciAdi','Kullanıcı Adınızı Giriniz...');
  EditKullaniciAdi.Align = alCenter;
  EditKullaniciAdi.Margins.Bottom = 200;
  EditKullaniciAdi.Width = 260;
  EditKullaniciAdi.Height = 45;
  EditKullaniciAdi.clProSettings.BorderColor = clAlphaColor.clHexToColor('#165744');
  EditKullaniciAdi.clProSettings.FontColor = clAlphaColor.clHexToColor('#000000');
  EditKullaniciAdi.clProSettings.RoundHeight = 5;
  EditKullaniciAdi.clProSettings.RoundWidth = 5;
  EditKullaniciAdi.clProSettings.BorderWidth = 3;
  EditKullaniciAdi.clProSettings.FontSize = 15;
  EditKullaniciAdi.clProSettings.TextSettings.Font.Style = [fsBold,fsItalic];
  EditKullaniciAdi.SetclProSettings(EditKullaniciAdi.clProSettings);
  
  EditSifre = anaForm.AddNewProEdit(anaForm,'EditSifre','Şifrenizi Giriniz...');
  EditSifre.Password=True;
  EditSifre.Align = alCenter;
  EditSifre.Margins.Bottom = 50;
  EditSifre.Width = 260;
  EditSifre.Height = 45;
  EditSifre.clProSettings.BorderColor = clAlphaColor.clHexToColor('#165744');
  EditSifre.clProSettings.FontColor = clAlphaColor.clHexToColor('#000000');
  EditSifre.clProSettings.RoundHeight = 5;
  EditSifre.clProSettings.RoundWidth = 5;
  EditSifre.clProSettings.BorderWidth = 3;
  EditSifre.clProSettings.FontSize = 15;
  EditSifre.clProSettings.TextSettings.Font.Style = [fsBold,fsItalic];
  EditSifre.SetclProSettings(EditSifre.clProSettings);

  anaForm.AddNewEvent(btnGirisYap,tbeOnClick,'GirisButonunaTiklandiginda');
  anaForm.AddNewEvent(btnSifreSimgesi,tbeOnClick,'TiklandigindaSifreButtonDegisme');
  
  EditKullaniciAdi.Text = 'UGUR';
  EditSifre.Text = '12345';
  
  anaForm.Run;
}




// uBilesenler 

function uAnaKodButtonlar(Form,Btnisim,BtnIcerik,Topdeger,BottomDeger,RightDeger,LeftDeger,WidthDeger,HeightDeger,BorderColorDeger,FontColorDeger,BackgroundColorDeger,RoundHeightDeger,RoundWidthDeger,BorderWidthDeger,FontSizeDeger):TClProButton;
var
Btn_AnaKod:TClProButton;
{
  Btn_AnaKod = Form.AddNewProButton(Form,Btnisim,BtnIcerik);
  Btn_AnaKod.Margins.Top=Topdeger;
  Btn_AnaKod.Margins.Bottom=BottomDeger;
  Btn_AnaKod.Margins.Right=RightDeger;
  Btn_AnaKod.Margins.Left=LeftDeger;
  Btn_AnaKod.Width = WidthDeger;
  Btn_AnaKod.Height = HeightDeger;
  Btn_AnaKod.clProSettings.BorderColor = clAlphaColor.clHexToColor(BorderColorDeger);
  Btn_AnaKod.clProSettings.FontColor = clAlphaColor.clHexToColor(FontColorDeger);
  Btn_AnaKod.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(BackgroundColorDeger);
  Btn_AnaKod.clProSettings.RoundHeight = RoundHeightDeger;
  Btn_AnaKod.clProSettings.RoundWidth = RoundWidthDeger;
  Btn_AnaKod.clProSettings.BorderWidth = BorderWidthDeger;
  Btn_AnaKod.clProSettings.FontSize = FontSizeDeger;
  Btn_AnaKod.SetclProSettings(Btn_AnaKod.clProSettings);

  Result = Btn_AnaKod;
}


function uAnaKodLabeller(Form,LabelIsim,LabelIcerik,TopDeger,BottomDeger,RightDeger,LeftDeger,WidthDeger,HeightDeger,BackgroundColorDeger,BorderColorDeger,FontcolorDeger,FontsizeDeger,FontVertAlignDeger,FontHorzAlignDeger,FontStyleDeger):TClProLabel;
var
Labels_uAnaKod:TClProLabel;
{
  Labels_uAnaKod=Form.AddNewproLabel(Form,LabelIsim,LabelIcerik)
  Labels_uAnaKod.Margins.Top = TopDeger;
  Labels_uAnaKod.Margins.Bottom = BottomDeger;
  Labels_uAnaKod.Margins.Right = RightDeger;
  Labels_uAnaKod.Margins.Left = LeftDeger;
  Labels_uAnaKod.Width = WidthDeger;
  Labels_uAnaKod.Height = HeightDeger;
  Labels_uAnaKod.clprosettings.BackgroundColor = clalphacolor.clHextocolor(BackgroundColorDeger);
  Labels_uAnaKod.clprosettings.BorderColor = clalphacolor.clHextocolor(BorderColorDeger);
  Labels_uAnaKod.clprosettings.FontColor = clalphacolor.clHextocolor(FontcolorDeger);
  Labels_uAnaKod.clprosettings.FontSize = FontsizeDeger;
  Labels_uAnaKod.clprosettings.FontVertAlign = FontVertAlignDeger;
  Labels_uAnaKod.clprosettings.FontHorzAlign = FontHorzAlignDeger;
  Labels_uAnaKod.clProSettings.TextSettings.Font.Style = [FontStyleDeger];
  Labels_uAnaKod.setclprosettings(Labels_uAnaKod.clprosettings);
  
  Result = Labels_uAnaKod;
}
// ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ //









// ------------------------------ ------------------------------ ------------------------------     uCariHareketRaporuFiltreleme     ------------------------------ ------------------------------ ------------------------------ //
function Cari_Buttonlar(Form,Btnisim,BtnIcerik,Topdeger,BottomDeger,RightDeger,LeftDeger,WidthDeger,HeightDeger,BorderColorDeger,FontColorDeger,RoundHeightDeger,RoundWidthDeger,BorderWidthDeger,FontSizeDeger,LinkDeger):TClProButton;
var
Btn_Cari:TClProButton;
{
  Btn_Cari = Form.AddNewProButton(Form,Btnisim,BtnIcerik);
  Btn_Cari.Align = alCenter;
  Btn_Cari.Margins.Top = Topdeger;
  Btn_Cari.Margins.Bottom = BottomDeger;
  Btn_Cari.Margins.Right = RightDeger;
  Btn_Cari.Margins.Left = LeftDeger;
  Btn_Cari.Width = WidthDeger;
  Btn_Cari.Height = HeightDeger;
  Btn_Cari.clProSettings.BorderColor = clAlphaColor.clHexToColor(BorderColorDeger);
  Btn_Cari.clProSettings.FontColor = clAlphaColor.clHexToColor(FontColorDeger);
  Btn_Cari.clProSettings.RoundHeight = RoundHeightDeger;
  Btn_Cari.clProSettings.RoundWidth = RoundWidthDeger;
  Btn_Cari.clProSettings.BorderWidth = BorderWidthDeger;
  Btn_Cari.clProSettings.FontSize = FontSizeDeger;
  Btn_Cari.SetclProSettings(Btn_Cari.clProSettings);
  Form.SetImage(Btn_Cari,LinkDeger); 

  Result = Btn_Cari;
}
// ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ //
function uCariHareket_Labeller(Form,LabelIsim,LabelIcerik,TopDeger,BottomDeger,RightDeger,LeftDeger,WidthDeger,HeightDeger,FontcolorDeger,FontsizeDeger,FontStyleDeger):TClProLabel;
var
Labels_CariHareket3:TClProLabel;
{
  Labels_CariHareket3=Form.AddNewProLabel(Form,LabelIsim,LabelIcerik);
  Labels_CariHareket3.Margins.Top = TopDeger;
  Labels_CariHareket3.Margins.Bottom = BottomDeger;
  Labels_CariHareket3.Margins.Right = RightDeger;
  Labels_CariHareket3.Margins.Left = LeftDeger;
  Labels_CariHareket3.Width = WidthDeger;
  Labels_CariHareket3.Height = HeightDeger;
  Labels_CariHareket3.clprosettings.FontColor = clalphacolor.clHextocolor(FontcolorDeger);
  Labels_CariHareket3.clprosettings.FontSize = FontsizeDeger;
  Labels_CariHareket3.clProSettings.TextSettings.Font.Style = [FontStyleDeger];
  Labels_CariHareket3.setclprosettings(Labels_CariHareket3.clprosettings);
  
  Result = Labels_CariHareket3;
}
// ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ //
function uCariHareket_Labeller2(Form,PanelIsim,LabelIsim,LabelIcerik,TopDeger,BottomDeger,RightDeger,LeftDeger,WidthDeger,HeightDeger,BackgroundColorDeger,FontcolorDeger,FontsizeDeger,FontVertAlignDeger,FontHorzAlignDeger,FontStyleDeger):TClProLabel;
var
Labels_CariHareket2:TClProLabel;
{
  Labels_CariHareket2=Form.AddNewProLabel(PanelIsim,LabelIsim,LabelIcerik);
  Labels_CariHareket2.Margins.Top = TopDeger;
  Labels_CariHareket2.Margins.Bottom = BottomDeger;
  Labels_CariHareket2.Margins.Right = RightDeger;
  Labels_CariHareket2.Margins.Left = LeftDeger;
  Labels_CariHareket2.Width = WidthDeger;
  Labels_CariHareket2.Height = HeightDeger;
  Labels_CariHareket2.clprosettings.BackgroundColor = clalphacolor.clHextocolor(BackgroundColorDeger);
  Labels_CariHareket2.clprosettings.FontColor = clalphacolor.clHextocolor(FontcolorDeger);
  Labels_CariHareket2.clprosettings.FontSize = FontsizeDeger;
  Labels_CariHareket2.clprosettings.FontVertAlign = FontVertAlignDeger;
  Labels_CariHareket2.clprosettings.FontHorzAlign = FontHorzAlignDeger;
  Labels_CariHareket2.clProSettings.TextSettings.Font.Style = [FontStyleDeger];
  Labels_CariHareket2.setclprosettings(Labels_CariHareket2.clprosettings);
  
  Result = Labels_CariHareket2;
}

// ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ //
function CariHareket_Paneller(Form,PanelIsim,TopDeger,BottomDeger,RightDeger,LeftDeger,WidthDeger,HeightDeger,BorderColorDeger,RoundHeightDeger,RoundWidthDeger,BorderWidthDeger,isFillDeger,isRoundDeger):TclProPanel;
var
Panel_Hepsi:TclProPanel;
{
  Panel_Hepsi = Form.AddNewProPanel(Form,PanelIsim);

  Panel_Hepsi.Margins.Top = TopDeger;
  Panel_Hepsi.Margins.Bottom = BottomDeger;
  Panel_Hepsi.Margins.Right = RightDeger;
  Panel_Hepsi.Margins.Left = LeftDeger;
  Panel_Hepsi.Width = WidthDeger;
  Panel_Hepsi.Height = HeightDeger;
  Panel_Hepsi.clProSettings.BorderColor = clAlphaColor.clHexToColor(BorderColorDeger);
  Panel_Hepsi.clProSettings.RoundHeight = RoundHeightDeger;
  Panel_Hepsi.clProSettings.RoundWidth = RoundWidthDeger;
  Panel_Hepsi.clProSettings.BorderWidth = BorderWidthDeger;
  Panel_Hepsi.clProSettings.IsFill = isFillDeger; 
  Panel_Hepsi.clProSettings.IsRound = isRoundDeger;
  Panel_Hepsi.SetclProSettings(Panel_Hepsi.clProSettings);
  
  Result = Panel_Hepsi;
}
// ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ //
function CariHareket_Editler1(Form,Editisim,EditIcerik,TopDeger,BottomDeger,RightDeger,LeftDeger,WidthDeger,HeightDeger,BordercolorDeger,FontcolorDeger,FontsizeDeger,FontVerticalAlign,FontHorizontalAlign,FontStyleDeger):TclProEdit;
var
Edit1:TclProEdit;
{
  Edit1 = Form.AddNewProEdit(Form,Editisim,EditIcerik);

  Edit1.Margins.Top = TopDeger;
  Edit1.Margins.Bottom = BottomDeger;
  Edit1.Margins.Right = RightDeger;
  Edit1.Margins.Left = LeftDeger;
  Edit1.Width = WidthDeger;
  Edit1.Height = HeightDeger;
  Edit1.clProSettings.BorderColor = clAlphaColor.clHexToColor(BordercolorDeger);
  Edit1.clProSettings.FontColor = clAlphaColor.clHexToColor(FontcolorDeger);
  Edit1.clProSettings.FontSize = FontsizeDeger;
  Edit1.clProSettings.FontVertAlign = FontVerticalAlign;
  Edit1.clProSettings.FontHorzAlign = FontHorizontalAlign;
  Edit1.clProSettings.TextSettings.Font.Style = [FontStyleDeger];
  Edit1.SetclProSettings(Edit1.clProSettings);

  Result = Edit1;
}
// ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ //
function CariHareket_Editler2(Form,PanelIsim,Editisim,EditIcerik,TopDeger,BottomDeger,RightDeger,LeftDeger,WidthDeger,HeightDeger,BackgroundColorDeger,FontcolorDeger):TclProEdit;
var
Edit2:TclProEdit;
{
  Edit2 = Form.AddNewProEdit(PanelIsim,Editisim,EditIcerik);

  Edit2.Margins.Top = TopDeger;
  Edit2.Margins.Bottom = BottomDeger;
  Edit2.Margins.Right = RightDeger;
  Edit2.Margins.Left = LeftDeger;
  Edit2.Width = WidthDeger;
  Edit2.Height = HeightDeger;
  Edit2.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(BackgroundColorDeger);
  Edit2.clProSettings.FontColor = clAlphaColor.clHexToColor(FontcolorDeger);
  Edit2.SetclProSettings(Edit2.clProSettings);

  Result = Edit2;
}
// ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ //
function CheckBoxlar_CariHareket(Form,PanelIsim,CheckBoxIsim,CheckBoxIcerik,TopDeger,BottomDeger,RightDeger,LeftDeger,WidthDeger,HeightDeger,StyledSettingsDeger,FontsizeDeger,FontcolorDeger):TCLCheckBox;
var
CheckBox_Hepsi:TCLCheckBox;
{
  CheckBox_Hepsi = Form.AddNewCheckBox(PanelIsim,CheckBoxIsim,CheckBoxIcerik);
  
  CheckBox_Hepsi.Margins.Top = TopDeger;
  CheckBox_Hepsi.Margins.Bottom = BottomDeger;
  CheckBox_Hepsi.Margins.Right = RightDeger;
  CheckBox_Hepsi.Margins.Left = LeftDeger;
  CheckBox_Hepsi.Width = WidthDeger;
  CheckBox_Hepsi.Height = HeightDeger;
  CheckBox_Hepsi.StyledSettings = StyledSettingsDeger;
  CheckBox_Hepsi.TextSettings.Font.Size=FontsizeDeger;
  CheckBox_Hepsi.TextSettings.FontColor = clAlphaColor.clHexToColor(FontcolorDeger);

  Result = CheckBox_Hepsi;
}
// ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ //










// ------------------------------ ------------------------------ ------------------------------     uStokBakiyeRaporuFiltreleme     ------------------------------ ------------------------------ ------------------------------ //
function Stok_Buttonlar(Form,Btnisim,BtnIcerik,Topdeger,BottomDeger,RightDeger,LeftDeger,WidthDeger,HeightDeger,BorderColorDeger,FontColorDeger,RoundHeightDeger,RoundWidthDeger,BorderWidthDeger,FontSizeDeger,LinkDeger):TClProButton;
var
Btn_Stok:TClProButton;
{
  Btn_Stok = Form.AddNewProButton(Form,Btnisim,BtnIcerik);
  Btn_Stok.Align = alCenter;
  Btn_Stok.Margins.Top = Topdeger;
  Btn_Stok.Margins.Bottom = BottomDeger;
  Btn_Stok.Margins.Right = RightDeger;
  Btn_Stok.Margins.Left = LeftDeger;
  Btn_Stok.Width = WidthDeger;
  Btn_Stok.Height = HeightDeger;
  Btn_Stok.clProSettings.BorderColor = clAlphaColor.clHexToColor(BorderColorDeger);
  Btn_Stok.clProSettings.FontColor = clAlphaColor.clHexToColor(FontColorDeger);
  Btn_Stok.clProSettings.RoundHeight = RoundHeightDeger;
  Btn_Stok.clProSettings.RoundWidth = RoundWidthDeger;
  Btn_Stok.clProSettings.BorderWidth = BorderWidthDeger;
  Btn_Stok.clProSettings.FontSize = FontSizeDeger;
  Btn_Stok.SetclProSettings(Btn_Stok.clProSettings);
  Form.SetImage(Btn_Stok,LinkDeger); 

  Result = Btn_Stok;
}
// ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ //
function DateEdit(Form,DateEditIsim,TopDeger,BottomDeger,RightDeger,LeftDeger,WidthDeger,HeightDeger,BordercolorDeger,BackgroundcolorDeger,FontHorizontalDeger,FontStyleDeger,FontsizeDeger):TClProDateEdit;
var
DateEdit:TClProDateEdit;
{
  DateEdit = Form.AddNewProDateEdit(Form,DateEditIsim);

  DateEdit.Margins.Top = TopDeger;
  DateEdit.Margins.Bottom = BottomDeger;
  DateEdit.Margins.Right = RightDeger;
  DateEdit.Margins.Left = LeftDeger;
  DateEdit.Width = WidthDeger;
  DateEdit.Height = HeightDeger;
  DateEdit.clProSettings.BorderColor = clAlphaColor.clHexToColor(BordercolorDeger);
  DateEdit.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(BackgroundcolorDeger);
  DateEdit.clProSettings.FontHorzAlign = FontHorizontalDeger;
  DateEdit.clProSettings.TextSettings.Font.Style = [FontStyleDeger];
  DateEdit.clProSettings.FontSize = FontsizeDeger;
  DateEdit.SetclProSettings(DateEdit.clProSettings);

  Result = DateEdit;
}
// ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ //
function StokBakiye_Labeller(Form,LabelIsim,LabelIcerik,TopDeger,BottomDeger,RightDeger,LeftDeger,WidthDeger,HeightDeger,FontcolorDeger,FontsizeDeger,FontStyleDeger):TClProLabel;
var
Labels_StokBakiye:TClProLabel;
{

  Labels_StokBakiye=Form.AddNewproLabel(Form,LabelIsim,LabelIcerik)
  Labels_StokBakiye.Margins.Top = TopDeger;
  Labels_StokBakiye.Margins.Bottom = BottomDeger;
  Labels_StokBakiye.Margins.Right = RightDeger;
  Labels_StokBakiye.Margins.Left = LeftDeger;
  Labels_StokBakiye.Width = WidthDeger;
  Labels_StokBakiye.Height = HeightDeger;
  Labels_StokBakiye.clprosettings.FontColor = clalphacolor.clHextocolor(FontcolorDeger);
  Labels_StokBakiye.clprosettings.FontSize = FontsizeDeger;
  Labels_StokBakiye.clProSettings.TextSettings.Font.Style = [FontStyleDeger];
  Labels_StokBakiye.setclprosettings(Labels_StokBakiye.clprosettings);
  
  Result = Labels_StokBakiye;
}
// ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------ //
function CheckBoxlar_StokBakiye(Form,CheckBoxIsim,CheckBoxIcerik,TopDeger,BottomDeger,RightDeger,LeftDeger,WidthDeger,HeightDeger,StyledSettingsDeger,FontsizeDeger,FontcolorDeger,FontStyleDeger):TCLCheckBox;
var
CheckBox_Hepsi:TCLCheckBox;
{
  CheckBox_Hepsi = Form.AddNewCheckBox(Form,CheckBoxIsim,CheckBoxIcerik);
  
  CheckBox_Hepsi.Margins.Top = TopDeger;
  CheckBox_Hepsi.Margins.Bottom = BottomDeger;
  CheckBox_Hepsi.Margins.Right = RightDeger;
  CheckBox_Hepsi.Margins.Left = LeftDeger;
  CheckBox_Hepsi.Width = WidthDeger;
  CheckBox_Hepsi.Height = HeightDeger;
  CheckBox_Hepsi.StyledSettings = StyledSettingsDeger;
  CheckBox_Hepsi.TextSettings.Font.Size = FontsizeDeger;
  CheckBox_Hepsi.TextSettings.FontColor = clAlphaColor.clHexToColor(FontcolorDeger);
  CheckBox_Hepsi.TextSettings.Font.Style = [FontStyleDeger];

  Result = CheckBox_Hepsi;
}



function StokBakiye_Editler(Form,Editisim,EditIcerik,TopDeger,BottomDeger,RightDeger,LeftDeger,WidthDeger):TclProEdit;
var
Edit:TclProEdit;
{
  Edit = Form.AddNewProEdit(Form,Editisim,EditIcerik);

  Edit.Margins.Top = TopDeger;
  Edit.Margins.Bottom = BottomDeger;
  Edit.Margins.Right = RightDeger;
  Edit.Margins.Left = LeftDeger;
  Edit.Width = WidthDeger;
  Edit.SetclProSettings(Edit.clProSettings);

  Result = Edit;
}






//uCariHareketCariKodu

uses uSQLData;
uses uBilesenler;
uses uCariHareketRaporuFiltreleme;

var
  MyForm2:TclForm;
  SQL_CariKodu:TClSqlQuery;
  MyGrid2:TclStringGrid;
  Lbl_CariKoduRehberi:TClProLabel;


void SetupGridColumns_CariHareketCariKodu;
{
  MyGrid2.Columns[0].Header = 'Satıcı Kodu';
  MyGrid2.Columns[1].Header = 'Cari Adı';
  MyGrid2.Columns[2].Header = 'Cari Yetkili';
  MyGrid2.Columns[3].Header = 'Cari II';
  MyGrid2.Columns[4].Header = 'Cari Ilce';
  MyGrid2.Columns[5].Header = 'Cari Telefon';
  MyGrid2.Columns[6].Header = 'Cep Telefon';
}
void AddDataToGrid_CariHareketCariKodu;
{
  SQL_CariKodu.SQL.Text = uSQLData.getSQLCariHareket_CariKodu;
  
  SQL_CariKodu.Open;
  if (SQL_CariKodu.Found)
  {
    MyForm2.RemoveGridBinding('mylink');
    MyForm2.AddNewGridBinding(MyGrid2,SQL_CariKodu, 'mylink');
    
    SetupGridColumns_CariHareketCariKodu;
    
    Lbl_CariKoduRehberi = uBilesenler.uCariHareket_Labeller(MyForm2,'Lbl_CariKoduRehberi','CARİ KODU REHBERİ',0,0,0,0,30,30,'#a31231',20,fsBold);
    Lbl_CariKoduRehberi.Align=alTop
    Lbl_CariKoduRehberi.clprosettings.BackgroundColor = clalphacolor.clHextocolor('#c4c4c4');
    Lbl_CariKoduRehberi.clprosettings.FontVertAlign = palcenter;
    Lbl_CariKoduRehberi.clprosettings.FontHorzAlign = palcenter;
    
    MyGrid2.Columns[0].Width = 160; 
    MyGrid2.Columns[1].Width = 400; 
    MyGrid2.Columns[2].Width = 400; 
    MyGrid2.Columns[3].Width = 100;
    MyGrid2.Columns[4].Width = 110;
    MyGrid2.Columns[5].Width = 160; 
    MyGrid2.Columns[6].Width = 160;
  }
  else
  {
    ShowMessage('Kayıt bulunamadı!');
  }
}
void OnCellClick;
{

  Edt_CariKodu.Text = MyGrid2.Cells[MyForm2.clSenderCol, MyForm2.clSenderRow];
  
  Edt_CariKodu.Text = SQL_CariKodu.FieldByName('CARI_KODU').AsString;
  
  MyForm2.Close;
  MyForm1.Run;
}


{

  MyForm2=TClForm.Create(self);
  MyForm2.SetFormColor('#c4c4c4', 'c4c4c4', clGVertical);

  MyGrid2=MyForm2.AddNewStringGrid(MyForm2,'MyGrid2');
  MyGrid2.Align=alClient;
  MyGrid2.ReadOnly=True;

  MyForm2.AddNewEvent(MyGrid2, tbeOnGridCellClick, 'OnCellClick');

  SQL_CariKodu=TClSqlQuery.Create(nil);
  SQL_CariKodu.Connection=Clomosy.DBSQLServerConnection;

  AddDataToGrid_CariHareketCariKodu;

  MyForm2.Run;
  
}





// uCariHareketRaporu

uses uSQLData;
uses uBilesenler;
uses uCariHareketRaporuFiltreleme;

var
  MyForm3:TclForm;
  SQL_CariHareket,SQL_TopDeger:TClSqlQuery;
  MyGrid:TclStringGrid;
  Lbl_CariHareket2,Lbl_TopBorc,Lbl_TopAlac,Lbl_BorcBak:TClProLabel;
  Edt_TBorc,Edt_TAla,Edt_BorcBak:TclProEdit;
  ProPanel:TclProPanel;
  Str1,Str2,baslangicTarih,bitisTarih,StrTBorc,StrTAlac,StrBorcBak,StrCariKodu:String;


void SetupGridColumns_CariHareketRaporu;
{
  MyGrid.Columns[0].Header = 'Cari Kodu';
  MyGrid.Columns[1].Header = 'Cari İsim';
  MyGrid.Columns[2].Header = '            Tarih          ';
  MyGrid.Columns[3].Header = 'Modül';
  MyGrid.Columns[4].Header = 'İşlem';
  MyGrid.Columns[5].Header = 'Kayıt Tipi';
  MyGrid.Columns[6].Header = 'Belge No';
  MyGrid.Columns[7].Header = 'Evrak No';
  MyGrid.Columns[8].Header = '            Vade           ';
  MyGrid.Columns[9].Header = '     Vade Gün';
  MyGrid.Columns[10].Header = '                                Borc';
  MyGrid.Columns[11].Header = '                            Alacak';
  MyGrid.Columns[12].Header = '                            Bakiye';
  MyGrid.Columns[13].Header = 'Açıklama';
}

void AddDataToGrid_CariHareket;
{
  ProPanel = uBilesenler.CariHareket_Paneller(MyForm3,'ProPanel',0,0,0,0,50,130,'#c8c6c6',1,1,5,True,True);
  ProPanel.Align = alBottom;

  Lbl_CariHareket2 = uBilesenler.uCariHareket_Labeller(MyForm3,'Lbl_CariHareket2','CARİ HAREKET RAPORU',0,0,0,0,30,30,'#a31231',20,fsBold)
  Lbl_CariHareket2.Align = alTop;
  Lbl_CariHareket2.clprosettings.BackgroundColor = clalphacolor.clHextocolor('#c4c4c4');
  Lbl_CariHareket2.clprosettings.FontVertAlign = palcenter;
  Lbl_CariHareket2.clprosettings.FontHorzAlign = palcenter;
  
  Lbl_TopBorc = uBilesenler.uCariHareket_Labeller2(MyForm3,ProPanel,'Lbl_TopBorc','Toplam Borç',0,80,295,0,150,15,'#ffffff','#0b07ed',12,palcenter,palcenter,fsBold);
  Lbl_TopBorc.Align = alCenter;
  Lbl_TopAlac = uBilesenler.uCariHareket_Labeller2(MyForm3,ProPanel,'Lbl_TopAlac','Toplam Alacak',0,0,282,0,150,15,'#ffffff','#0b07ed',12,palcenter,palcenter,fsBold);
  Lbl_TopAlac.Align=alCenter;
  Lbl_BorcBak = uBilesenler.uCariHareket_Labeller2(MyForm3,ProPanel,'Lbl_BorcBak','Borç Bakiye',80,0,295,0,150,15,'#ffffff','#000000',12,palcenter,palcenter,fsBold);
  Lbl_BorcBak.Align = alCenter;

  Edt_TBorc = uBilesenler.CariHareket_Editler2(MyForm3,ProPanel,'Edt_TBorc','',0,80,0,0,160,20,'#c4c4c4','#6b0000');
  Edt_TBorc.Align = alCenter;
  Edt_TAla = uBilesenler.CariHareket_Editler2(MyForm3,ProPanel,'Edt_TAla','',0,0,0,0,160,20,'#c4c4c4','#067f30');
  Edt_TAla.Align = alCenter;
  Edt_BorcBak = uBilesenler.CariHareket_Editler2(MyForm3,ProPanel,'Edt_BorcBak','',80,0,0,0,160,20,'#c4c4c4','#f20d0d');
  Edt_BorcBak.Align = alCenter;

    if (Edt_CariKodu.Text == '')
  {
    baslangicTarih = DtEdt_1.DateStr;
    bitisTarih = DtEdt_2.DateStr;


    if ((Edt_TutarAralik.Text=='') && (Edt_TutarAralik2.Text==''))
    {
      // ----------------------------------------------------------- TOPLAM KISMI ----------------------------------------------------------- //
      SQL_TopDeger = TClSqlQuery.Create(nil);
      SQL_TopDeger.Connection = Clomosy.DBSQLServerConnection;

      SQL_TopDeger.SQL.Text =uSQLData.getSQLTopla1(baslangicTarih,bitisTarih);

      SQL_TopDeger.Open;
      // Elde edilen toplam değeri bir değişkene atama işlemi
      if (SQL_TopDeger.Found) 
      {
        StrTBorc = SQL_TopDeger.FieldByName('TOPLAM_BORC').AsString;
        StrTAlac = SQL_TopDeger.FieldByName('TOPLAM_ALACAK').AsString;
        StrBorcBak = SQL_TopDeger.FieldByName('BORC_BAKIYE').AsString;
      }
      Edt_TBorc.Text = StrTBorc; 
      Edt_TAla.Text = StrTAlac;
      Edt_BorcBak.Text = StrBorcBak;

      SQL_CariHareket.SQL.Text = uSQLData.getSQLCariHareket1(baslangicTarih,bitisTarih);
      
      if(ChBox_Alicilar.isChecked==True)
      {
        SQL_TopDeger = TClSqlQuery.Create(nil);
        SQL_TopDeger.Connection = Clomosy.DBSQLServerConnection;
        
        SQL_TopDeger.SQL.Text =uSQLData.getSQLTopla2(baslangicTarih,bitisTarih);
        
        SQL_TopDeger.Open;
        if (SQL_TopDeger.Found) 
        {
          StrTBorc = SQL_TopDeger.FieldByName('TOPLAM_BORC').AsString;
          StrTAlac = SQL_TopDeger.FieldByName('TOPLAM_ALACAK').AsString;
          StrBorcBak = SQL_TopDeger.FieldByName('BORC_BAKIYE').AsString;
        }
        Edt_TBorc.Text = StrTBorc; 
        Edt_TAla.Text = StrTAlac;
        Edt_BorcBak.Text = StrBorcBak;
        
        SQL_CariHareket.SQL.Text = uSQLData.getSQLCariHareket2(baslangicTarih,bitisTarih);
      } 
      
      if(ChBox_Saticilar.isChecked==True)
      {
        SQL_TopDeger = TClSqlQuery.Create(nil);
        SQL_TopDeger.Connection = Clomosy.DBSQLServerConnection;
        
        SQL_TopDeger.SQL.Text =uSQLData.getSQLTopla3(baslangicTarih,bitisTarih);
        
        SQL_TopDeger.Open;
        if (SQL_TopDeger.Found) 
        {
          StrTBorc = SQL_TopDeger.FieldByName('TOPLAM_BORC').AsString;
          StrTAlac = SQL_TopDeger.FieldByName('TOPLAM_ALACAK').AsString;
          StrBorcBak = SQL_TopDeger.FieldByName('BORC_BAKIYE').AsString;
        }
        Edt_TBorc.Text = StrTBorc; 
        Edt_TAla.Text = StrTAlac;
        Edt_BorcBak.Text = StrBorcBak;
        
        SQL_CariHareket.SQL.Text = uSQLData.getSQLCariHareket3(baslangicTarih,bitisTarih);
      } 
    }


    if((Edt_TutarAralik.Text<>'') && (Edt_TutarAralik2.Text<>''))
    {
      // Tutar aralığını alıyoruz
      Str1 = StrToInt(Edt_TutarAralik.Text);
      Str2 = StrToInt(Edt_TutarAralik2.Text);    

      SQL_TopDeger = TClSqlQuery.Create(nil);
      SQL_TopDeger.Connection = Clomosy.DBSQLServerConnection;
      
      SQL_TopDeger.SQL.Text = uSQLData.getSQLTopla4(baslangicTarih,bitisTarih,Str1,Str2);
      
      SQL_TopDeger.Open;
      // Elde edilen toplam değeri bir değişkene atama işlemi
      if (SQL_TopDeger.Found) 
      {
        StrTBorc = SQL_TopDeger.FieldByName('TOPLAM_BORC').AsString;
        StrTAlac = SQL_TopDeger.FieldByName('TOPLAM_ALACAK').AsString;
        StrBorcBak = SQL_TopDeger.FieldByName('BORC_BAKIYE').AsString;
      }
      // Label'e değer atama
      Edt_TBorc.Text = StrTBorc; 
      Edt_TAla.Text = StrTAlac;
      Edt_BorcBak.Text = StrBorcBak;

      SQL_CariHareket.SQL.Text =  uSQLData.getSQLCariHareket4(baslangicTarih,bitisTarih,Str1,Str2);
      
      if(ChBox_Alicilar.isChecked==True)
      {
        SQL_TopDeger = TClSqlQuery.Create(nil);
        SQL_TopDeger.Connection = Clomosy.DBSQLServerConnection;
        
        SQL_TopDeger.SQL.Text = uSQLData.getSQLTopla5(baslangicTarih,bitisTarih,Str1,Str2);
        
        SQL_TopDeger.Open;
        if (SQL_TopDeger.Found) 
        {
          StrTBorc = SQL_TopDeger.FieldByName('TOPLAM_BORC').AsString;
          StrTAlac = SQL_TopDeger.FieldByName('TOPLAM_ALACAK').AsString;
          StrBorcBak = SQL_TopDeger.FieldByName('BORC_BAKIYE').AsString;
        }
        Edt_TBorc.Text = StrTBorc; 
        Edt_TAla.Text = StrTAlac;
        Edt_BorcBak.Text = StrBorcBak;
        
        SQL_CariHareket.SQL.Text = uSQLData.getSQLCariHareket5(baslangicTarih,bitisTarih,Str1,Str2);
      } 
      
      if(ChBox_Saticilar.isChecked==True)
      {
        SQL_TopDeger = TClSqlQuery.Create(nil);
        SQL_TopDeger.Connection = Clomosy.DBSQLServerConnection;
        
        SQL_TopDeger.SQL.Text = uSQLData.getSQLTopla6(baslangicTarih,bitisTarih,Str1,Str2);
        
        SQL_TopDeger.Open;
        if (SQL_TopDeger.Found) 
        {
          StrTBorc = SQL_TopDeger.FieldByName('TOPLAM_BORC').AsString;
          StrTAlac = SQL_TopDeger.FieldByName('TOPLAM_ALACAK').AsString;
          StrBorcBak = SQL_TopDeger.FieldByName('BORC_BAKIYE').AsString;
        }
        Edt_TBorc.Text = StrTBorc; 
        Edt_TAla.Text = StrTAlac;
        Edt_BorcBak.Text = StrBorcBak;
        
        SQL_CariHareket.SQL.Text = uSQLData.getSQLCariHareket6(baslangicTarih,bitisTarih,Str1,Str2);
      } 
    }
  }

  if (Edt_CariKodu.Text <> '')
  {
    baslangicTarih = DtEdt_1.DateStr;
    bitisTarih = DtEdt_2.DateStr;
    StrCariKodu=Edt_CariKodu.Text;

    if ((Edt_TutarAralik.Text=='') && (Edt_TutarAralik2.Text==''))
    {
      // ----------------------------------------------------------- TOPLAM KISMI ----------------------------------------------------------- //
      SQL_TopDeger = TClSqlQuery.Create(nil);
      SQL_TopDeger.Connection = Clomosy.DBSQLServerConnection;
      
      SQL_TopDeger.SQL.Text = uSQLData.getSQLTopla7(baslangicTarih,bitisTarih,StrCariKodu);
      
      SQL_TopDeger.Open;
      // Elde edilen toplam değeri bir değişkene atama işlemi
      if (SQL_TopDeger.Found) 
      {
        StrTBorc = SQL_TopDeger.FieldByName('TOPLAM_BORC').AsString;
        StrTAlac = SQL_TopDeger.FieldByName('TOPLAM_ALACAK').AsString;
        StrBorcBak = SQL_TopDeger.FieldByName('BORC_BAKIYE').AsString;
      }
      Edt_TBorc.Text = StrTBorc; 
      Edt_TAla.Text = StrTAlac;
      Edt_BorcBak.Text = StrBorcBak;

      SQL_CariHareket.SQL.Text = uSQLData.getSQLCariHareket7(baslangicTarih,bitisTarih,StrCariKodu);
      
      if(ChBox_Alicilar.isChecked==True)
      {
        SQL_TopDeger = TClSqlQuery.Create(nil);
        SQL_TopDeger.Connection = Clomosy.DBSQLServerConnection;
        
        SQL_TopDeger.SQL.Text = uSQLData.getSQLTopla8(baslangicTarih,bitisTarih,StrCariKodu);
        
        SQL_TopDeger.Open;
        if (SQL_TopDeger.Found) 
        {
          StrTBorc = SQL_TopDeger.FieldByName('TOPLAM_BORC').AsString;
          StrTAlac = SQL_TopDeger.FieldByName('TOPLAM_ALACAK').AsString;
          StrBorcBak = SQL_TopDeger.FieldByName('BORC_BAKIYE').AsString;
        }
        Edt_TBorc.Text = StrTBorc; 
        Edt_TAla.Text = StrTAlac;
        Edt_BorcBak.Text = StrBorcBak;
        
        SQL_CariHareket.SQL.Text = uSQLData.getSQLCariHareket8(baslangicTarih,bitisTarih,StrCariKodu);
      } 
      if(ChBox_Saticilar.isChecked==True)
      {
        SQL_TopDeger = TClSqlQuery.Create(nil);
        SQL_TopDeger.Connection = Clomosy.DBSQLServerConnection;
        
        SQL_TopDeger.SQL.Text = uSQLData.getSQLTopla9(baslangicTarih,bitisTarih,StrCariKodu);
        
        SQL_TopDeger.Open;
        if (SQL_TopDeger.Found) 
        {
          StrTBorc = SQL_TopDeger.FieldByName('TOPLAM_BORC').AsString;
          StrTAlac = SQL_TopDeger.FieldByName('TOPLAM_ALACAK').AsString;
          StrBorcBak = SQL_TopDeger.FieldByName('BORC_BAKIYE').AsString;
        }
        Edt_TBorc.Text = StrTBorc; 
        Edt_TAla.Text = StrTAlac;
        Edt_BorcBak.Text = StrBorcBak;
        
        SQL_CariHareket.SQL.Text = uSQLData.getSQLCariHareket9(baslangicTarih,bitisTarih,StrCariKodu);
      } 
    }

    if((Edt_TutarAralik.Text<>'') && (Edt_TutarAralik2.Text<>''))
    {
      // Tutar aralığını alıyoruz
      Str1 = StrToInt(Edt_TutarAralik.Text);
      Str2 = StrToInt(Edt_TutarAralik2.Text);    

      SQL_TopDeger = TClSqlQuery.Create(nil);
      SQL_TopDeger.Connection = Clomosy.DBSQLServerConnection;
      
      SQL_TopDeger.SQL.Text = uSQLData.getSQLTopla10(baslangicTarih,bitisTarih,Str1,Str2,StrCariKodu);
      
      SQL_TopDeger.Open;
      // Elde edilen toplam değeri bir değişkene atama işlemi
      if (SQL_TopDeger.Found) 
      {
        StrTBorc = SQL_TopDeger.FieldByName('TOPLAM_BORC').AsString;
        StrTAlac = SQL_TopDeger.FieldByName('TOPLAM_ALACAK').AsString;
        StrBorcBak = SQL_TopDeger.FieldByName('BORC_BAKIYE').AsString;
      }
      // Label'e değer atama
      Edt_TBorc.Text = StrTBorc; 
      Edt_TAla.Text = StrTAlac;
      Edt_BorcBak.Text = StrBorcBak;

      SQL_CariHareket.SQL.Text = uSQLData.getSQLCariHareket10(baslangicTarih,bitisTarih,Str1,Str2,StrCariKodu);
      
      if(ChBox_Alicilar.isChecked==True)
      {
        SQL_TopDeger = TClSqlQuery.Create(nil);
        SQL_TopDeger.Connection = Clomosy.DBSQLServerConnection;
        
        SQL_TopDeger.SQL.Text = uSQLData.getSQLTopla11(baslangicTarih,bitisTarih,Str1,Str2,StrCariKodu);
        
        SQL_TopDeger.Open;
        if (SQL_TopDeger.Found) 
        {
          StrTBorc = SQL_TopDeger.FieldByName('TOPLAM_BORC').AsString;
          StrTAlac = SQL_TopDeger.FieldByName('TOPLAM_ALACAK').AsString;
          StrBorcBak = SQL_TopDeger.FieldByName('BORC_BAKIYE').AsString;
        }
        Edt_TBorc.Text = StrTBorc; 
        Edt_TAla.Text = StrTAlac;
        Edt_BorcBak.Text = StrBorcBak;
        
        SQL_CariHareket.SQL.Text = uSQLData.getSQLCariHareket11(baslangicTarih,bitisTarih,Str1,Str2,StrCariKodu);
      } 
      
      if(ChBox_Saticilar.isChecked==True)
      {
        SQL_TopDeger = TClSqlQuery.Create(nil);
        SQL_TopDeger.Connection = Clomosy.DBSQLServerConnection;
        
        SQL_TopDeger.SQL.Text = uSQLData.getSQLTopla12(baslangicTarih,bitisTarih,Str1,Str2,StrCariKodu);
        
        SQL_TopDeger.Open;
        if (SQL_TopDeger.Found) 
        {
          StrTBorc = SQL_TopDeger.FieldByName('TOPLAM_BORC').AsString;
          StrTAlac = SQL_TopDeger.FieldByName('TOPLAM_ALACAK').AsString;
          StrBorcBak = SQL_TopDeger.FieldByName('BORC_BAKIYE').AsString;
        }
        Edt_TBorc.Text = StrTBorc; 
        Edt_TAla.Text = StrTAlac;
        Edt_BorcBak.Text = StrBorcBak;
        
        SQL_CariHareket.SQL.Text = uSQLData.getSQLCariHareket12(baslangicTarih,bitisTarih,Str1,Str2,StrCariKodu);
      } 
    }
  }

  SQL_CariHareket.Open;
  if (SQL_CariHareket.Found)
  {
    MyForm3.RemoveGridBinding('mylink');
    MyForm3.AddNewGridBinding(MyGrid,SQL_CariHareket, 'mylink');
    SetupGridColumns_CariHareketRaporu;
    
    MyGrid.Columns[0].Width = 140; 
    MyGrid.Columns[1].Width = 370; 
    MyGrid.Columns[2].Width = 115; 
    MyGrid.Columns[3].Width = 120; 
    MyGrid.Columns[4].Width = 140; 
    MyGrid.Columns[5].Width = 280; 
    MyGrid.Columns[6].Width = 260;
    MyGrid.Columns[7].Width = 260;
    MyGrid.Columns[8].Width = 115;
    MyGrid.Columns[9].Width = 85;
    MyGrid.Columns[10].Width = 145;
    MyGrid.Columns[11].Width = 145;
    MyGrid.Columns[12].Width = 145;
    MyGrid.Columns[13].Width = 520;
  }
  else
  {
    ShowMessage('Lütfen Tarih Aralığını Girmeden İşlem Yapmayınız!');
  }
}



{
  MyForm3 = TclForm.Create(Self);
  MyForm3.SetFormColor('#c4c4c4', '#c4c4c4', clGVertical);

  MyGrid = MyForm3.AddNewStringGrid(MyForm3, 'MyGrid');
  MyGrid.Align = alClient;
  MyGrid.ReadOnly = TRUE;

  SQL_CariHareket = TClSqlQuery.Create(nil);
  SQL_CariHareket.Connection = Clomosy.DBSQLServerConnection;

  AddDataToGrid_CariHareket;

  MyForm3.Run;
}






uCariHareketRaporuFiltreleme

uses uSQLData;
uses uBilesenler;


var
    MyForm1:TclForm;
    Btn_CariHareket,Btn_CariRehber:TClProButton;
    DtEdt_1,DtEdt_2;TClProDateEdit;
    Lbl_CariHareket,Lbl_CariKodu,Lbl_BasTarihi,Lbl_BitTarihi,Lbl_CariTip,Lbl_TutarAralik:TClProLabel;
    Edt_CariKodu,Edt_TutarAralik,Edt_TutarAralik2:TclProEdit;
    ProPanel2:TclProPanel;
    ChBox_Alicilar,ChBox_Saticilar:TCLCheckBox;

void SetTestDate;
{
  DtEdt_1 = uBilesenler.DateEdit(MyForm1,'DtEdt_1',0,450,100,0,120,22,'#323d8c','#ffffff',palcenter,fsBold,15);
  DtEdt_1.Align = alCenter;
  DtEdt_1.clProSettings.IsFill = True; 
  DtEdt_1.clProSettings.IsRound = True;
  
  DtEdt_2 = uBilesenler.DateEdit(MyForm1,'DtEdt_2',0,370,100,0,120,22,'#323d8c','#ffffff',palcenter,fsBold,15);
  DtEdt_2.Align = alCenter;
  DtEdt_2.clProSettings.IsFill = True; 
  DtEdt_2.clProSettings.IsRound = True;  
}

void MyFormTransfer_CariHareketCariKodu;
{
  Clomosy.RunUnit('uCariHareketCariKodu');
}

void MyFormTransfer_CariHareket;
{
  Clomosy.RunUnit('uCariHareketRaporu');
}

{
  MyForm1 = TclForm.Create(Self);

  MyForm1.SetFormColor('#c4c4c4', '#c4c4c4', clGVertical);

  SetTestDate;

  Btn_CariHareket = uBilesenler.Cari_Buttonlar(MyForm1,'Btn_CariHareket','',450,0,0,0,150,50,'#2bcf25','#000000',10,10,2,12,'https://r.resimlink.com/Gop6mlX.jpg');
  Btn_CariHareket.Align = alCenter; 
  Btn_CariRehber = uBilesenler.Cari_Buttonlar(MyForm1,'Btn_CariRehber','',0,530,0,80,30,22,'#d6cdcd','#000000',5,5,2,12,'https://r.resimlink.com/Lc7idXsx.jpg');
  Btn_CariRehber.Align = alCenter;

  Lbl_CariHareket = uBilesenler.uCariHareket_Labeller(MyForm1,'Lbl_CariHareket','CARİ HAREKET RAPORU',0,0,0,60,30,35,'#a31231',24,fsBold);
  Lbl_CariHareket.Align = alTop;
  Lbl_CariKodu = uBilesenler.uCariHareket_Labeller(MyForm1,'Lbl_CariKodu','Cari Kodu',0,530,230,0,150,18,'#000000',12,fsBold);
  Lbl_BasTarihi = uBilesenler.uCariHareket_Labeller(MyForm1,'Lbl_BasTarihi','Baş. Tarihi',0,450,230,0,150,18,'#000000',12,fsBold);
  Lbl_BitTarihi = uBilesenler.uCariHareket_Labeller(MyForm1,'Lbl_BitTarihi','Bit. Tarihi',0,370,230,0,150,18,'#000000',12,fsBold);
  Lbl_CariTip = uBilesenler.uCariHareket_Labeller(MyForm1,'Lbl_CariTip','Cari Tipi',0,290,230,0,150,18,'#000000',12,fsBold);
  Lbl_TutarAralik = uBilesenler.uCariHareket_Labeller(MyForm1,'Lbl_TutarAralik','Tutar Aralığı',100,0,230,0,150,18,'#000000',12,fsBold);

  Edt_CariKodu = uBilesenler.CariHareket_Editler1(MyForm1,'Edt_CariKodu','',0,530,100,0,120,22,'#ffffff','#000000',12,palcenter,palcenter,fsBold);
  Edt_CariKodu.Align = alCenter;
  Edt_TutarAralik = uBilesenler.CariHareket_Editler1(MyForm1,'Edt_TutarAralik','',100,0,80,0,140,22,'#ffffff','#000000',12,palcenter,palcenter,fsBold);
  Edt_TutarAralik.Align = alCenter;
  Edt_TutarAralik2 = uBilesenler.CariHareket_Editler1(MyForm1,'Edt_TutarAralik2','',100,0,0,240,140,22,'#ffffff','#000000',12,palcenter,palcenter,fsBold);
  Edt_TutarAralik2.Align = alCenter;

  ProPanel2 = uBilesenler.CariHareket_Paneller(MyForm1,'ProPanel2',0,180,0,80,300,130,'#cfcdca',10,10,2,True,True);
  ProPanel2.Align = alCenter;

  ChBox_Alicilar = uBilesenler.CheckBoxlar_CariHareket(MyForm1,ProPanel2, 'ChBox_Alicilar', 'ALICILAR',170,260,220,40,100,50,ssFamily,15,'#000000');
  ChBox_Alicilar.Align = alCenter;
  ChBox_Saticilar = uBilesenler.CheckBoxlar_CariHareket(MyForm1,ProPanel2, 'ChBox_Saticilar', 'SATICILAR',230,260,220,40,100,50,ssFamily,15,'#000000');
  ChBox_Saticilar.Align = alCenter;

  MyForm1.AddNewEvent(Btn_CariHareket,tbeOnClick,'MyFormTransfer_CariHareket');
  MyForm1.AddNewEvent(Btn_CariRehber,tbeOnClick,'MyFormTransfer_CariHareketCariKodu');

  MyForm1.Run;
}





// uLogin


uses uBilesenler;
uses uSQLData;

var
  MyForm : TclForm;
  Btn_CariKayitlari,Btn_CariHareket,Btn_StokBakiye,Btn_StokBakiye2:TClProButton;
  MyGrid,MyGrid2 : TclStringGrid;
  SQ_Cari,SQ_StokBakiye : TClSqlQuery;
  Lbl_CariKartlari,Lbl_StokBakiye:TClProLabel;

void GoTo_CariKayitlari;
{
  Clomosy.RunUnit('uCariKayitlari');
}

void GoTo_CariHareketRaporu;
{
  Clomosy.RunUnit('uCariHareketRaporuFiltreleme');
}

void GoTo_StokBakiye;
{
  Clomosy.RunUnit('uStokBakiyeRaporu_Filtresiz');
}

void GoTo_StokBakiyeRaporu;
{
  Clomosy.RunUnit('uStokBakiyeRaporuFiltreleme');
}

{
  MyForm = TclForm.Create(Self);

  Clomosy.DBSQLServerConnect('SQL Server','UGUR\UGURSQL', 'sa', '123456', 'ATIKER_24', 1433);

  MyForm.SetFormColor('#c4c4c4', '#c4c4c4', clGVertical);
  MyForm.SetFormBGImage('https://r.resimlink.com/JkY5cs.png');
  
  Btn_CariKayitlari = uBilesenler.uAnaKodButtonlar(MyForm,'Btn_CariKayitlari','CARİ KARTLARI',0,360,0,0,220,50,'#2bcf25','#000000','#FFFFFF',10,10,2,12);
  Btn_CariKayitlari.Align = alCenter;

  Btn_CariHareket = uBilesenler.uAnaKodButtonlar(MyForm,'Btn_CariHareket','CARİ HAREKET RAPORU',0,240,0,0,220,50,'#2bcf25','#000000','#FFFFFF',10,10,2,12);
  Btn_CariHareket.Align = alCenter;
  Btn_CariHareket.clProSettings.FontVertAlign = palcenter;
  Btn_CariHareket.clProSettings.FontHorzAlign = palcenter;
  Btn_CariHareket.clProSettings.TextSettings.Font.Style = [fsBold];

  Btn_StokBakiye = uBilesenler.uAnaKodButtonlar(MyForm,'Btn_StokBakiye','STOK BAKİYE RAPORU',0,120,0,0,220,50,'#2bcf25','#000000','#FFFFFF',10,10,2,12);
  Btn_StokBakiye.Align = alCenter; 
  Btn_StokBakiye.clProSettings.FontVertAlign = palcenter;
  Btn_StokBakiye.clProSettings.FontHorzAlign = palcenter;
  Btn_StokBakiye.clProSettings.TextSettings.Font.Style = [fsBold];

  Btn_StokBakiye2 = uBilesenler.uAnaKodButtonlar(MyForm,'Btn_StokBakiye2','STOK BAKİYE RAPORU / FİLTRELİ',0,0,0,0,220,50,'#2bcf25','#000000','#FFFFFF',10,10,2,12);
  Btn_StokBakiye2.Align = alCenter;
  Btn_StokBakiye2.clProSettings.FontVertAlign = palcenter;
  Btn_StokBakiye2.clProSettings.FontHorzAlign = palcenter;
  Btn_StokBakiye2.clProSettings.TextSettings.Font.Style = [fsBold];

  MyForm.AddNewEvent(Btn_CariKayitlari, tbeOnClick, 'GoTo_CariKayitlari');
  MyForm.AddNewEvent(Btn_StokBakiye, tbeOnClick, 'GoTo_StokBakiye');
  MyForm.AddNewEvent(Btn_StokBakiye2, tbeOnClick, 'GoTo_StokBakiyeRaporu');
  MyForm.AddNewEvent(Btn_CariHareket, tbeOnClick, 'GoTo_CariHareketRaporu');
  
  MyForm.Run;
}






// uSQLData 



function getSQLCariKayitlari:TclSQLQuery;
var
  str1:String;
{
    str1 = '
    SELECT CARI_KODU, CARI_ADI FROM TBLCARISB WHERE 1=1 ORDER BY CARI_KODU
    ';

    Result = str1;
}
// STOK BAKİYE FİLTRESİZ SADECE RAPORU GETİRME SQL SORGU KODU
function getSQLStokBakiye:TclSQLQuery;
var
  str1:String;
{
    str1 = '
    SELECT 
    STOK_KODU, 
    STOK_ADI,
    CASE 
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
            RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
            RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
            RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
            RIGHT(SPACE(13) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 13)
        ELSE 
            RIGHT(SPACE(12) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 12)
    END AS GIRIS_MIKTAR,
    CASE 
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
            RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
            RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
            RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
            RIGHT(SPACE(13) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 13)
        ELSE 
            RIGHT(SPACE(12) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 12)
    END AS CIKIS_MIKTAR,
    CASE 
        WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
            RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
        WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
            RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
        WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
            RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
        WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
            RIGHT(SPACE(13) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 13)
        ELSE 
            RIGHT(SPACE(12) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 12)
    END AS BAKIYE
    FROM 
        TBLSTOKSB 
    INNER JOIN 
        TBLSTOKHR ON TBLSTOKSB.REC_NO = TBLSTOKHR.STOK_KODU_RECID
        
    WHERE 
        1=1
    GROUP BY 
        STOK_KODU, STOK_ADI;
    ';

    Result = str1;
}













// ---------------------------------------------------------------------- CARİ HAREKET RAPORU ---------------------------------------------------------------------- //

// TOPLAM YAZDIRMA SQL SORGULARI

// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='') 
// Toplam Yazdırma İşlemi
function getSQLTopla1(baslangicTarih,bitisTarih):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      SELECT 
      FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
      FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
      FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
      FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
      WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104);
      ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiAlicilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla2(baslangicTarih,bitisTarih):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND CB.CARI_TIPI = ''A'';
        ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiSaticilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla3(baslangicTarih,bitisTarih):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND CB.CARI_TIPI = ''S'';
        ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')
// Toplam Yazdırma İşlemi
function getSQLTopla4(baslangicTarih,bitisTarih,integer1,integer2):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
      DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
      SELECT 
      FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
      FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
      FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
      FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
      WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      AND BORC + ALACAK BETWEEN @integer1 AND @integer2;
      ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiAlicilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla5(baslangicTarih,bitisTarih,integer1,integer2):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND CB.CARI_TIPI = ''A'';
        ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiSaticilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla6(baslangicTarih,bitisTarih,integer1,integer2):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND CB.CARI_TIPI = ''S'';
        ';

    Result = str1;
}

// ------------------------------------------   ------------------------------------------   ------------------------------------------   ------------------------------------------ //

// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')
// Toplam Yazdırma İşlemi
function getSQLTopla7(baslangicTarih,bitisTarih,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
      SELECT 
      FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
      FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
      FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
      FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
      WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      AND CB.CARI_KODU = @StrCariKodu;
      ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiAlicilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla8(baslangicTarih,bitisTarih,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND CB.CARI_KODU = @StrCariKodu
        AND CB.CARI_TIPI = ''A'';
        ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiSaticilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla9(baslangicTarih,bitisTarih,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND CB.CARI_TIPI = ''S'';
        ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')
// Toplam Yazdırma İşlemi
function getSQLTopla10(baslangicTarih,bitisTarih,integer1,integer2,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
      DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
      DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
      SELECT 
      FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
      FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
      FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
      FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
      WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      AND BORC + ALACAK BETWEEN @integer1 AND @integer2
      AND CB.CARI_KODU = @StrCariKodu;
      ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiAlicilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla11(baslangicTarih,bitisTarih,integer1,integer2,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND CB.CARI_KODU = @StrCariKodu;
        AND CB.CARI_TIPI = ''A'';
        ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiSaticilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla12(baslangicTarih,bitisTarih,integer1,integer2,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND CB.CARI_KODU = @StrCariKodu;
        AND CB.CARI_TIPI = ''S'';
        ';

    Result = str1;
}


// ------------------------------------------------------------------------------------------------------------------------ CARİ HAREKET ------------------------------------------------------------------------------------------------------------------------ //
function getSQLCariHareket_CariKodu:TclSQLQuery;
var
  str1:String;
{
    str1 =  '
    SET NO_BROWSETABLE ON  SET ROWCOUNT 0  SELECT * FROM 
    (SELECT TOP 100 PERCENT CARI_KODU, CARI_ADI, CARI_YETKILI, CARI_IL, CARI_ILCE, CARI_TELEFON, CEP_TELEFON FROM [PRG_VIEW_CRREHBER] WITH (NOLOCK) WHERE 1=1 AND ISNULL(PASIF_KART,0)=0) AS REHBERSQL   
    ORDER BY CARI_KODU ASC  SET ROWCOUNT 0  SET NO_BROWSETABLE OFF
    ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='') 
function getSQLCariHareket1(baslangicTarih,bitisTarih):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      SELECT * FROM 
      ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
      FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
      MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
      FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
      DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
      CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
      CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
      RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
      FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
      WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      ) AS GrdRaporCari
      ORDER BY CARI_KODU
      ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiAlicilar.isChecked==True
function getSQLCariHareket2(baslangicTarih,bitisTarih):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND TBLCARISB.CARI_TIPI IN (''A'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiSaticilar.isChecked==True
function getSQLCariHareket3(baslangicTarih,bitisTarih):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND TBLCARISB.CARI_TIPI IN (''S'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')
function getSQLCariHareket4(baslangicTarih,bitisTarih,integer1,integer2):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
      DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
      SELECT * FROM 
      ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
      FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
      MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
      FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
      DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
      CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
      CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
      RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
      FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
      WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      AND BORC + ALACAK BETWEEN @integer1 AND @integer2
      ) AS GrdRaporCari
      ORDER BY CARI_KODU
      ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiAlicilar.isChecked==True
function getSQLCariHareket5(baslangicTarih,bitisTarih,integer1,integer2):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND TBLCARISB.CARI_TIPI IN (''A'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiSaticilar.isChecked==True
function getSQLCariHareket6(baslangicTarih,bitisTarih,integer1,integer2):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND TBLCARISB.CARI_TIPI IN (''S'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}

// ------------------------------------------   ------------------------------------------   ------------------------------------------   ------------------------------------------ //

// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')
function getSQLCariHareket7(baslangicTarih,bitisTarih,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
      SELECT * FROM 
      ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
      FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
      MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
      FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
      DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
      CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
      CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
      RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
      FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
      WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      AND TBLCARISB.CARI_KODU=@StrCariKodu
      ) AS GrdRaporCari
      ORDER BY CARI_KODU
      ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiAlicilar.isChecked==True
function getSQLCariHareket8(baslangicTarih,bitisTarih,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND TBLCARISB.CARI_KODU=@StrCariKodu
        AND TBLCARISB.CARI_TIPI IN (''A'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiSaticilar.isChecked==True
function getSQLCariHareket9(baslangicTarih,bitisTarih,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND TBLCARISB.CARI_KODU=@StrCariKodu
        AND TBLCARISB.CARI_TIPI IN (''S'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')
function getSQLCariHareket10(baslangicTarih,bitisTarih,integer1,integer2,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
      DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
      DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
      SELECT * FROM 
      ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
      FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
      MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
      FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
      DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
      CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
      CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
      RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
      FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
      WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      AND BORC + ALACAK BETWEEN @integer1 AND @integer2
      AND TBLCARISB.CARI_KODU=@StrCariKodu
      ) AS GrdRaporCari
      ORDER BY CARI_KODU
      ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiAlicilar.isChecked==True
function getSQLCariHareket11(baslangicTarih,bitisTarih,integer1,integer2,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND TBLCARISB.CARI_KODU=@StrCariKodu
        AND TBLCARISB.CARI_TIPI IN (''A'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result=str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiSaticilar.isChecked==True
function getSQLCariHareket12(baslangicTarih,bitisTarih,integer1,integer2,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND TBLCARISB.CARI_KODU=@StrCariKodu
        AND TBLCARISB.CARI_TIPI IN (''S'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}














// ------------------------------------------------------------------------------------------------------------------------ STOK BAKİYE RAPORU FİLTRELEME------------------------------------------------------------------------------------------------------------------------ //
function getSQLStokBakiye_StokKodu:TclSQLQuery;
var
  str1:String;
{
    str1 = '
    SET NO_BROWSETABLE ON  SET ROWCOUNT 0  SELECT * FROM 
    (SELECT TOP 100 PERCENT STOK_KODU, STOK_ADI /*FATSTOKSECF*/ /*FATSTOKSECT*/  FROM [PRG_VIEW_STREHBER] WITH (NOLOCK)   WHERE 1=1     
    AND ISNULL(PASIF_KART,0)=0    ) AS REHBERSQL   ORDER BY STOK_KODU ASC  SET ROWCOUNT 0  SET NO_BROWSETABLE OFF
    ';

    Result = str1;
}
// EditStokBakiyeStokKodu.Text == ''
function getSQLStokBakiye_1(string3):String;
var
  str1:String;
{
    str1 = '
        DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
        SELECT * FROM (
        SELECT 
            STOK_KODU, 
            STOK_ADI AS STOK_ADI,
            CASE 
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                    RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                    RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                    RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                    RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                ELSE 
                    RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
            END AS GIRIS_MIKTAR,
            CASE 
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                    RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                    RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                    RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                    RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                ELSE 
                    RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
            END AS CIKIS_MIKTAR,
            CASE 
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                    RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                    RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                    RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                    RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                ELSE 
                    RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
            END AS BAKIYE
         FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
         AND SUBE_KODU IN (0)
        LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
        LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
        LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
        WHERE 1=1 
        AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)         
        GROUP BY 
        STOK_KODU,STOK_ADI
        ) AS DATA WHERE 1=1
        ';

    Result = str1;
}
// EditStokBakiyeStokKodu.Text == ''   -   CheckBoxKodYerineIsimGelsin.IsChecked==True
function getSQLStokBakiye_2(string3):String;
var
  str1:String;
{
    str1 = '
              DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
              SELECT * FROM (
              SELECT 
                  STOK_KODU, 
                  STOK_ADI AS STOK_ADI,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS GIRIS_MIKTAR,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS CIKIS_MIKTAR,
                  CASE 
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
                  END AS BAKIYE
               FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
               AND SUBE_KODU IN (0)
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
              LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
              WHERE 1=1 
              AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)
              GROUP BY 
              STOK_KODU,STOK_ADI
              ) AS DATA WHERE 1=1
              ';

    Result = str1;
}
// EditStokBakiyeStokKodu.Text == ''   -   (CheckBoxStokYazilanIsimGelsin.IsChecked==True
function getSQLStokBakiye_3(string3):String;
var
  str1:String;
{
    str1 = '
              DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
              SELECT * FROM (
              SELECT 
                  STOK_KODU, 
                  STOK_ADI AS STOK_ADI,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS GIRIS_MIKTAR,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS CIKIS_MIKTAR,
                  CASE 
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
                  END AS BAKIYE
               FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
               AND SUBE_KODU IN (0)
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
              LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
              WHERE 1=1 
              AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)               
              GROUP BY 
              STOK_KODU,STOK_ADI
              ) AS DATA WHERE 1=1
              ORDER BY
              STOK_ADI ASC
              ';

    Result = str1;
}
// EditStokBakiyeStokKodu.Text == ''   -   CheckBoxHizmetStoklariHaric.IsChecked==True
function getSQLStokBakiye_4(string3):String;
var
  str1:String;
{
    str1 = '
              DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
              SELECT * FROM (
              SELECT 
                  STOK_KODU, 
                  STOK_ADI AS STOK_ADI,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS GIRIS_MIKTAR,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS CIKIS_MIKTAR,
                  CASE 
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
                  END AS BAKIYE
               FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
               AND SUBE_KODU IN (0)
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
              LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
              WHERE 1=1 
              AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)
              AND TBLSTOKSB.STOK_TIPI<>''Z''
              GROUP BY 
              STOK_KODU,STOK_ADI
              ) AS DATA WHERE 1=1
              ';

    Result = str1;
}
// EDİT STOK BAKİYE STOK KODU SEÇİLDİĞİ ZAMAN (ELSE KISMI)
function getSQLStokBakiye_5(string1,string3):String;
var
  str1:String;
{
    str1 = '
        DECLARE @string1 AS VARCHAR(20)= ' + QuotedStr(string1) + ';
        DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
        SELECT * FROM (
        SELECT 
            STOK_KODU, 
            STOK_ADI AS STOK_ADI,
            CASE 
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                    RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                    RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                    RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                    RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                ELSE 
                    RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
            END AS GIRIS_MIKTAR,
            CASE 
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                    RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                    RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                    RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                    RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                ELSE 
                    RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
            END AS CIKIS_MIKTAR,
            CASE 
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                    RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                    RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                    RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                    RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                ELSE 
                    RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
            END AS BAKIYE
         FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
         AND SUBE_KODU IN (0)
        LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
        LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
        LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
        WHERE 1=1 
        AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)
			  AND STOK_KODU=@string1       
        GROUP BY 
        STOK_KODU,STOK_ADI
        ) AS DATA WHERE 1=1
        ';

    Result = str1;
}
// CheckBoxKodYerineIsimGelsin.IsChecked==True
function getSQLStokBakiye_6(string1,string3):String;
var
  str1:String;
{
    str1 = '
              DECLARE @string1 AS VARCHAR(20)= ' + QuotedStr(string1) + ';
              DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
              SELECT * FROM (
              SELECT 
                  STOK_KODU, 
                  STOK_ADI AS STOK_ADI,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS GIRIS_MIKTAR,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS CIKIS_MIKTAR,
                  CASE 
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
                  END AS BAKIYE
               FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
               AND SUBE_KODU IN (0)
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
              LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
              WHERE 1=1 
              AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)
              AND STOK_KODU=@string1
              GROUP BY 
              STOK_KODU,STOK_ADI
              ) AS DATA WHERE 1=1
              ';

    Result = str1;
}
// CheckBoxStokYazilanIsimGelsin.IsChecked==True
function getSQLStokBakiye_7(string1,string3):String;
var
  str1:String;
{
    str1 = '
              DECLARE @string1 AS VARCHAR(20)= ' + QuotedStr(string1) + ';
              DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
              SELECT * FROM (
              SELECT 
                  STOK_KODU, 
                  STOK_ADI AS STOK_ADI,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS GIRIS_MIKTAR,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS CIKIS_MIKTAR,
                  CASE 
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
                  END AS BAKIYE
               FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
               AND SUBE_KODU IN (0)
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
              LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
              WHERE 1=1 
              AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)
              AND STOK_KODU=@string1
              GROUP BY 
              STOK_KODU,STOK_ADI
              ) AS DATA WHERE 1=1
              ';

    Result = str1;
}
// CheckBoxHizmetStoklariHaric.IsChecked==True
function getSQLStokBakiye_8(string1,string3):String;
var
  str1:String;
{
    str1 = '
              DECLARE @string1 AS VARCHAR(20)= ' + QuotedStr(string1) + ';
              DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
              SELECT * FROM (
              SELECT 
                  STOK_KODU, 
                  STOK_ADI AS STOK_ADI,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS GIRIS_MIKTAR,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS CIKIS_MIKTAR,
                  CASE 
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
                  END AS BAKIYE
               FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
               AND SUBE_KODU IN (0)
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
              LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
              WHERE 1=1
              AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)
              AND STOK_KODU=@string1
              AND TBLSTOKSB.STOK_TIPI<>''Z''
              GROUP BY 
              STOK_KODU,STOK_ADI
              ) AS DATA WHERE 1=1
              ';

    Result = str1;
}
// STOK BAKİYE DETAY KISMI
function getSQLStokBakiye_Detay(stringdetay):String;
var
  str1:String;
{
    str1 = '
    DECLARE @detay AS VARCHAR(20) = ' + QuotedStr(stringdetay) + ';
    SELECT 
    FORMAT(TARIH, ''dd.MM.yyyy'', ''tr-TR'') AS TARIH,
    PRG_VIEW_STHR.BELGE_NO,
    EVRAK_NO,
    CASE
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 1 THEN ''Satış Faturası''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 2 THEN ''Alış Faturası''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 3 THEN ''Satış İrsaliyesi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 4 THEN ''Alış İrsaliyesi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 21 THEN ''Alıcı Siparişi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 22 THEN ''Satıcı Siparişi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 31 THEN ''Satış Teklifi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 32 THEN ''Alım Teklifi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 41 THEN ''Alış Talep''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 42 THEN ''İhaleli Satım Talep''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 45 THEN ''Sevk Emir Kayıtları''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 50 THEN ''Depo Sarf Çıkış Fişi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 51 THEN ''Depo Sarf Giriş Fişi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 60 THEN ''Üretime Çıkış Kayıtları''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 61 THEN ''Üretim Sonu Girişleri''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 101 THEN ''Diğer Satış Faturalama''
        ELSE ''''
    END AS BELGE_TIPI,
    CASE 
        WHEN ABS(GIREN_MIKTAR) <= 9.99 THEN RIGHT(SPACE(16) + FORMAT(GIREN_MIKTAR, ''N2'', ''tr-TR''), 16)
        WHEN ABS(GIREN_MIKTAR) <= 99.99 THEN RIGHT(SPACE(15) + FORMAT(GIREN_MIKTAR, ''N2'', ''tr-TR''), 15)
        WHEN ABS(GIREN_MIKTAR) <= 999.99 THEN RIGHT(SPACE(14) + FORMAT(GIREN_MIKTAR, ''N2'', ''tr-TR''), 14)
        WHEN ABS(GIREN_MIKTAR) <= 9999.99 THEN RIGHT(SPACE(13) + FORMAT(GIREN_MIKTAR, ''N2'', ''tr-TR''), 13)
        ELSE RIGHT(SPACE(12) + FORMAT(GIREN_MIKTAR, ''N2'', ''tr-TR''), 12)
    END AS GIREN_NET,
    CASE 
        WHEN ABS(CIKAN_MIKTAR) <= 9.99 THEN RIGHT(SPACE(16) + FORMAT(CIKAN_MIKTAR, ''N2'', ''tr-TR''), 16)
        WHEN ABS(CIKAN_MIKTAR) <= 99.99 THEN RIGHT(SPACE(15) + FORMAT(CIKAN_MIKTAR, ''N2'', ''tr-TR''), 15)
        WHEN ABS(CIKAN_MIKTAR) <= 999.99 THEN RIGHT(SPACE(14) + FORMAT(CIKAN_MIKTAR, ''N2'', ''tr-TR''), 14)
        WHEN ABS(CIKAN_MIKTAR) <= 9999.99 THEN RIGHT(SPACE(13) + FORMAT(CIKAN_MIKTAR, ''N2'', ''tr-TR''), 13)
        ELSE RIGHT(SPACE(12) + FORMAT(CIKAN_MIKTAR, ''N2'', ''tr-TR''), 12)
    END AS CIKIS_NET,
    CASE 
        WHEN ABS(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING)) <= 9.99 THEN 
            RIGHT(SPACE(16) + FORMAT(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING), ''N2'', ''tr-TR''), 16)
        WHEN ABS(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING)) <= 99.99 THEN 
            RIGHT(SPACE(15) + FORMAT(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING), ''N2'', ''tr-TR''), 15)
        WHEN ABS(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING)) <= 999.99 THEN 
            RIGHT(SPACE(14) + FORMAT(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING), ''N2'', ''tr-TR''), 14)
        WHEN ABS(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING)) <= 9999.99 THEN 
            RIGHT(SPACE(13) + FORMAT(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING), ''N2'', ''tr-TR''), 13)
        ELSE 
            RIGHT(SPACE(12) + FORMAT(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING), ''N2'', ''tr-TR''), 12)
    END AS BAKIYE,
    CARI_ADI, 
    CASE 
        WHEN ABS(STOK_NF) <= 9.99 THEN RIGHT(SPACE(16) + FORMAT(STOK_NF, ''N2'', ''tr-TR''), 16)
        WHEN ABS(STOK_NF) <= 99.99 THEN RIGHT(SPACE(15) + FORMAT(STOK_NF, ''N2'', ''tr-TR''), 15)
        ELSE RIGHT(SPACE(14) + FORMAT(STOK_NF, ''N2'', ''tr-TR''), 14)
    END AS STOK_NF,
    CASE 
        WHEN ABS(NET_TUTAR) <= 9.99 THEN RIGHT(SPACE(16) + FORMAT(NET_TUTAR, ''N2'', ''tr-TR''), 16)
        WHEN ABS(NET_TUTAR) <= 99.99 THEN RIGHT(SPACE(15) + FORMAT(NET_TUTAR, ''N2'', ''tr-TR''), 15)
        ELSE RIGHT(SPACE(14) + FORMAT(NET_TUTAR, ''N2'', ''tr-TR''), 14)
    END AS NET_TUTAR,
    CASE 
        WHEN ABS(STOK_BF) <= 9.99 THEN RIGHT(SPACE(16) + FORMAT(STOK_BF, ''N2'', ''tr-TR''), 16)
        WHEN ABS(STOK_BF) <= 99.99 THEN RIGHT(SPACE(15) + FORMAT(STOK_BF, ''N2'', ''tr-TR''), 15)
        ELSE RIGHT(SPACE(14) + FORMAT(STOK_BF, ''N2'', ''tr-TR''), 14)
    END AS BIRIM_FIYAT,
    KDV_ORANI,
    CASE 
        WHEN DEPO_KODU = 0 THEN '''' 
        ELSE CAST(DEPO_KODU AS VARCHAR)
    END AS DEPO_KODU,
    KAYIT_ACIKLAMA,
    CASE 
        WHEN LEN(CAST(REC_NO AS VARCHAR)) <= 4 THEN RIGHT(SPACE(16) + CAST(REC_NO AS VARCHAR), 16)
        WHEN LEN(CAST(REC_NO AS VARCHAR)) BETWEEN 5 AND 8 THEN RIGHT(SPACE(15) + CAST(REC_NO AS VARCHAR), 15)
        ELSE RIGHT(SPACE(14) + CAST(REC_NO AS VARCHAR), 14)
    END AS STOKHR_RECNO,
    CASE 
        WHEN ABS(MALIYET_NF) <= 9.99 THEN RIGHT(SPACE(16) + FORMAT(MALIYET_NF, ''N2'', ''tr-TR''), 16)
        WHEN ABS(MALIYET_NF) <= 99.99 THEN RIGHT(SPACE(15) + FORMAT(MALIYET_NF, ''N2'', ''tr-TR''), 15)
        ELSE RIGHT(SPACE(14) + FORMAT(MALIYET_NF, ''N2'', ''tr-TR''), 14)
    END AS MALIYET_NET,
    FORMAT(HAREKET_MALIYET_FIYATI, ''N2'', ''tr-TR'') AS HAREKET_MALIYET_FIYATI,
    STOK_YAZILAN_ISIM
    FROM 
    PRG_VIEW_STHR
    WHERE 
    STOK_KODU = @detay 
    AND SUBE_KODU IN (SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
    ORDER BY 
    TARIH, GCKOD DESC, REC_NO;

    ';

    Result = str1;
}





// uStokBakiyeDetay




function getSQLCariKayitlari:TclSQLQuery;
var
  str1:String;
{
    str1 = '
    SELECT CARI_KODU, CARI_ADI FROM TBLCARISB WHERE 1=1 ORDER BY CARI_KODU
    ';

    Result = str1;
}
// STOK BAKİYE FİLTRESİZ SADECE RAPORU GETİRME SQL SORGU KODU
function getSQLStokBakiye:TclSQLQuery;
var
  str1:String;
{
    str1 = '
    SELECT 
    STOK_KODU, 
    STOK_ADI,
    CASE 
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
            RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
            RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
            RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
            RIGHT(SPACE(13) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 13)
        ELSE 
            RIGHT(SPACE(12) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 12)
    END AS GIRIS_MIKTAR,
    CASE 
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
            RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
            RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
            RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
        WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
            RIGHT(SPACE(13) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 13)
        ELSE 
            RIGHT(SPACE(12) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 12)
    END AS CIKIS_MIKTAR,
    CASE 
        WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
            RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
        WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
            RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
        WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
            RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
        WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
            RIGHT(SPACE(13) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 13)
        ELSE 
            RIGHT(SPACE(12) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 12)
    END AS BAKIYE
    FROM 
        TBLSTOKSB 
    INNER JOIN 
        TBLSTOKHR ON TBLSTOKSB.REC_NO = TBLSTOKHR.STOK_KODU_RECID
        
    WHERE 
        1=1
    GROUP BY 
        STOK_KODU, STOK_ADI;
    ';

    Result = str1;
}













// ---------------------------------------------------------------------- CARİ HAREKET RAPORU ---------------------------------------------------------------------- //

// TOPLAM YAZDIRMA SQL SORGULARI

// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='') 
// Toplam Yazdırma İşlemi
function getSQLTopla1(baslangicTarih,bitisTarih):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      SELECT 
      FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
      FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
      FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
      FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
      WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104);
      ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiAlicilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla2(baslangicTarih,bitisTarih):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND CB.CARI_TIPI = ''A'';
        ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiSaticilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla3(baslangicTarih,bitisTarih):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND CB.CARI_TIPI = ''S'';
        ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')
// Toplam Yazdırma İşlemi
function getSQLTopla4(baslangicTarih,bitisTarih,integer1,integer2):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
      DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
      SELECT 
      FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
      FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
      FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
      FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
      WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      AND BORC + ALACAK BETWEEN @integer1 AND @integer2;
      ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiAlicilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla5(baslangicTarih,bitisTarih,integer1,integer2):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND CB.CARI_TIPI = ''A'';
        ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiSaticilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla6(baslangicTarih,bitisTarih,integer1,integer2):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND CB.CARI_TIPI = ''S'';
        ';

    Result = str1;
}

// ------------------------------------------   ------------------------------------------   ------------------------------------------   ------------------------------------------ //

// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')
// Toplam Yazdırma İşlemi
function getSQLTopla7(baslangicTarih,bitisTarih,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
      SELECT 
      FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
      FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
      FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
      FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
      WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      AND CB.CARI_KODU = @StrCariKodu;
      ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiAlicilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla8(baslangicTarih,bitisTarih,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND CB.CARI_KODU = @StrCariKodu
        AND CB.CARI_TIPI = ''A'';
        ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiSaticilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla9(baslangicTarih,bitisTarih,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND CB.CARI_TIPI = ''S'';
        ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')
// Toplam Yazdırma İşlemi
function getSQLTopla10(baslangicTarih,bitisTarih,integer1,integer2,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
      DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
      DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
      SELECT 
      FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
      FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
      FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
      FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
      WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      AND BORC + ALACAK BETWEEN @integer1 AND @integer2
      AND CB.CARI_KODU = @StrCariKodu;
      ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiAlicilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla11(baslangicTarih,bitisTarih,integer1,integer2,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND CB.CARI_KODU = @StrCariKodu;
        AND CB.CARI_TIPI = ''A'';
        ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiSaticilar.isChecked==True
// Toplam Yazdırma İşlemi
function getSQLTopla12(baslangicTarih,bitisTarih,integer1,integer2,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT 
        FORMAT(SUM(BORC), ''N2'', ''tr-TR'') AS TOPLAM_BORC,
        FORMAT(SUM(ALACAK), ''N2'', ''tr-TR'') AS TOPLAM_ALACAK,
        FORMAT(SUM(BORC) - SUM(ALACAK), ''N2'', ''tr-TR'') AS BORC_BAKIYE
        FROM PRG_VIEW_CARIHAREKET AS CH JOIN TBLCARISB AS CB ON CH.CARI_KODU_RECID = CB.REC_NO
        WHERE CH.SUBE_KODU IN (CH.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND CB.CARI_KODU = @StrCariKodu;
        AND CB.CARI_TIPI = ''S'';
        ';

    Result = str1;
}


// ------------------------------------------------------------------------------------------------------------------------ CARİ HAREKET ------------------------------------------------------------------------------------------------------------------------ //
function getSQLCariHareket_CariKodu:TclSQLQuery;
var
  str1:String;
{
    str1 =  '
    SET NO_BROWSETABLE ON  SET ROWCOUNT 0  SELECT * FROM 
    (SELECT TOP 100 PERCENT CARI_KODU, CARI_ADI, CARI_YETKILI, CARI_IL, CARI_ILCE, CARI_TELEFON, CEP_TELEFON FROM [PRG_VIEW_CRREHBER] WITH (NOLOCK) WHERE 1=1 AND ISNULL(PASIF_KART,0)=0) AS REHBERSQL   
    ORDER BY CARI_KODU ASC  SET ROWCOUNT 0  SET NO_BROWSETABLE OFF
    ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='') 
function getSQLCariHareket1(baslangicTarih,bitisTarih):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      SELECT * FROM 
      ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
      FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
      MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
      FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
      DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
      CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
      CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
      RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
      FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
      WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      ) AS GrdRaporCari
      ORDER BY CARI_KODU
      ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiAlicilar.isChecked==True
function getSQLCariHareket2(baslangicTarih,bitisTarih):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND TBLCARISB.CARI_TIPI IN (''A'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiSaticilar.isChecked==True
function getSQLCariHareket3(baslangicTarih,bitisTarih):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND TBLCARISB.CARI_TIPI IN (''S'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')
function getSQLCariHareket4(baslangicTarih,bitisTarih,integer1,integer2):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
      DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
      SELECT * FROM 
      ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
      FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
      MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
      FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
      DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
      CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
      CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
      RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
      FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
      WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      AND BORC + ALACAK BETWEEN @integer1 AND @integer2
      ) AS GrdRaporCari
      ORDER BY CARI_KODU
      ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiAlicilar.isChecked==True
function getSQLCariHareket5(baslangicTarih,bitisTarih,integer1,integer2):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND TBLCARISB.CARI_TIPI IN (''A'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}
// EditCariKodu1.Text == ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiSaticilar.isChecked==True
function getSQLCariHareket6(baslangicTarih,bitisTarih,integer1,integer2):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND TBLCARISB.CARI_TIPI IN (''S'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}

// ------------------------------------------   ------------------------------------------   ------------------------------------------   ------------------------------------------ //

// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')
function getSQLCariHareket7(baslangicTarih,bitisTarih,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
      SELECT * FROM 
      ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
      FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
      MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
      FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
      DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
      CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
      CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
      RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
      FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
      WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      AND TBLCARISB.CARI_KODU=@StrCariKodu
      ) AS GrdRaporCari
      ORDER BY CARI_KODU
      ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiAlicilar.isChecked==True
function getSQLCariHareket8(baslangicTarih,bitisTarih,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND TBLCARISB.CARI_KODU=@StrCariKodu
        AND TBLCARISB.CARI_TIPI IN (''A'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text=='') && (EditTutarAraligi2.Text=='')   -   CheckBoxCariTipiSaticilar.isChecked==True
function getSQLCariHareket9(baslangicTarih,bitisTarih,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND TBLCARISB.CARI_KODU=@StrCariKodu
        AND TBLCARISB.CARI_TIPI IN (''S'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')
function getSQLCariHareket10(baslangicTarih,bitisTarih,integer1,integer2,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
      DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
      DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
      DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
      DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
      DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
      SELECT * FROM 
      ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
      FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
      MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
      FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
      DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
      CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
      CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
      RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
      FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
      WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
      AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
      AND BORC + ALACAK BETWEEN @integer1 AND @integer2
      AND TBLCARISB.CARI_KODU=@StrCariKodu
      ) AS GrdRaporCari
      ORDER BY CARI_KODU
      ';

    Result = str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiAlicilar.isChecked==True
function getSQLCariHareket11(baslangicTarih,bitisTarih,integer1,integer2,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND TBLCARISB.CARI_KODU=@StrCariKodu
        AND TBLCARISB.CARI_TIPI IN (''A'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result=str1;
}
// EditCariKodu1.Text <> ''   -   (EditTutarAraligi1.Text<>'') && (EditTutarAraligi2.Text<>'')   -   CheckBoxCariTipiSaticilar.isChecked==True
function getSQLCariHareket12(baslangicTarih,bitisTarih,integer1,integer2,StrCariKodu):String;
var
  str1:String;
{
    str1 = '
        DECLARE @baslangicTarih AS VARCHAR(20) = ' + QuotedStr(baslangicTarih) + ';
        DECLARE @bitisTarih AS VARCHAR(20) = ' + QuotedStr(bitisTarih) + ';
        DECLARE @integer1 AS INT ='+IntToStr(integer1)+';
        DECLARE @integer2 AS INT = '+IntToStr(integer2)+';
        DECLARE @StrCariKodu AS VARCHAR(20) = ' + QuotedStr(StrCariKodu) + ';
        SELECT * FROM 
        ( SELECT TBLCARISB.CARI_KODU, TBLCARISB.CARI_ADI, 
        FORMAT(TARIH, ''dd.MM.yyyy'') AS TARIH, MODUL_ADI, ISLEM_ADI,
        MODUL_ADI + ''/'' + ISLEM_ADI AS BELGE_TIPI, BELGE_NO, EVRAK_NO, 
        FORMAT(VADE_TARIH,''dd.MM.yyyy'') AS VADE_TARIH,
        DATEDIFF(DAY,TARIH,VADE_TARIH) AS VADE_GUN, 
        CASE WHEN BORC = 0.00 THEN RIGHT(SPACE(23) + FORMAT(BORC, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(BORC, ''N2'', ''tr-TR''), 16) END AS BORC, 
        CASE WHEN ALACAK = 0.00 THEN RIGHT(SPACE(23) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 23) ELSE RIGHT(SPACE(16) + FORMAT(ALACAK, ''N2'', ''tr-TR''), 16) END AS ALACAK,
        RIGHT(SPACE(16) + FORMAT(BORC - ALACAK, ''N2'', ''tr-TR''), 16) AS BAKIYE, KAYIT_ACIKLAMA 
        FROM PRG_VIEW_CARIHAREKET,TBLCARISB 
        WHERE PRG_VIEW_CARIHAREKET.CARI_KODU_RECID = TBLCARISB.REC_NO AND PRG_VIEW_CARIHAREKET.SUBE_KODU IN (PRG_VIEW_CARIHAREKET.SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/ 
        AND TARIH BETWEEN TRY_CONVERT(DATE, @baslangicTarih, 104) AND TRY_CONVERT(DATE, @bitisTarih, 104)
        AND BORC + ALACAK BETWEEN @integer1 AND @integer2
        AND TBLCARISB.CARI_KODU=@StrCariKodu
        AND TBLCARISB.CARI_TIPI IN (''S'')
        ) AS GrdRaporCari
        ORDER BY CARI_KODU,TARIH ASC
        ';

    Result = str1;
}














// ------------------------------------------------------------------------------------------------------------------------ STOK BAKİYE RAPORU FİLTRELEME------------------------------------------------------------------------------------------------------------------------ //
function getSQLStokBakiye_StokKodu:TclSQLQuery;
var
  str1:String;
{
    str1 = '
    SET NO_BROWSETABLE ON  SET ROWCOUNT 0  SELECT * FROM 
    (SELECT TOP 100 PERCENT STOK_KODU, STOK_ADI /*FATSTOKSECF*/ /*FATSTOKSECT*/  FROM [PRG_VIEW_STREHBER] WITH (NOLOCK)   WHERE 1=1     
    AND ISNULL(PASIF_KART,0)=0    ) AS REHBERSQL   ORDER BY STOK_KODU ASC  SET ROWCOUNT 0  SET NO_BROWSETABLE OFF
    ';

    Result = str1;
}
// EditStokBakiyeStokKodu.Text == ''
function getSQLStokBakiye_1(string3):String;
var
  str1:String;
{
    str1 = '
        DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
        SELECT * FROM (
        SELECT 
            STOK_KODU, 
            STOK_ADI AS STOK_ADI,
            CASE 
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                    RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                    RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                    RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                    RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                ELSE 
                    RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
            END AS GIRIS_MIKTAR,
            CASE 
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                    RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                    RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                    RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                    RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                ELSE 
                    RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
            END AS CIKIS_MIKTAR,
            CASE 
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                    RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                    RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                    RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                    RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                ELSE 
                    RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
            END AS BAKIYE
         FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
         AND SUBE_KODU IN (0)
        LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
        LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
        LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
        WHERE 1=1 
        AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)         
        GROUP BY 
        STOK_KODU,STOK_ADI
        ) AS DATA WHERE 1=1
        ';

    Result = str1;
}
// EditStokBakiyeStokKodu.Text == ''   -   CheckBoxKodYerineIsimGelsin.IsChecked==True
function getSQLStokBakiye_2(string3):String;
var
  str1:String;
{
    str1 = '
              DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
              SELECT * FROM (
              SELECT 
                  STOK_KODU, 
                  STOK_ADI AS STOK_ADI,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS GIRIS_MIKTAR,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS CIKIS_MIKTAR,
                  CASE 
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
                  END AS BAKIYE
               FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
               AND SUBE_KODU IN (0)
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
              LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
              WHERE 1=1 
              AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)
              GROUP BY 
              STOK_KODU,STOK_ADI
              ) AS DATA WHERE 1=1
              ';

    Result = str1;
}
// EditStokBakiyeStokKodu.Text == ''   -   (CheckBoxStokYazilanIsimGelsin.IsChecked==True
function getSQLStokBakiye_3(string3):String;
var
  str1:String;
{
    str1 = '
              DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
              SELECT * FROM (
              SELECT 
                  STOK_KODU, 
                  STOK_ADI AS STOK_ADI,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS GIRIS_MIKTAR,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS CIKIS_MIKTAR,
                  CASE 
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
                  END AS BAKIYE
               FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
               AND SUBE_KODU IN (0)
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
              LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
              WHERE 1=1 
              AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)               
              GROUP BY 
              STOK_KODU,STOK_ADI
              ) AS DATA WHERE 1=1
              ORDER BY
              STOK_ADI ASC
              ';

    Result = str1;
}
// EditStokBakiyeStokKodu.Text == ''   -   CheckBoxHizmetStoklariHaric.IsChecked==True
function getSQLStokBakiye_4(string3):String;
var
  str1:String;
{
    str1 = '
              DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
              SELECT * FROM (
              SELECT 
                  STOK_KODU, 
                  STOK_ADI AS STOK_ADI,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS GIRIS_MIKTAR,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS CIKIS_MIKTAR,
                  CASE 
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
                  END AS BAKIYE
               FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
               AND SUBE_KODU IN (0)
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
              LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
              WHERE 1=1 
              AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)
              AND TBLSTOKSB.STOK_TIPI<>''Z''
              GROUP BY 
              STOK_KODU,STOK_ADI
              ) AS DATA WHERE 1=1
              ';

    Result = str1;
}
// EDİT STOK BAKİYE STOK KODU SEÇİLDİĞİ ZAMAN (ELSE KISMI)
function getSQLStokBakiye_5(string1,string3):String;
var
  str1:String;
{
    str1 = '
        DECLARE @string1 AS VARCHAR(20)= ' + QuotedStr(string1) + ';
        DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
        SELECT * FROM (
        SELECT 
            STOK_KODU, 
            STOK_ADI AS STOK_ADI,
            CASE 
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                    RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                    RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                    RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                    RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                ELSE 
                    RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
            END AS GIRIS_MIKTAR,
            CASE 
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                    RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                    RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                    RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                    RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                ELSE 
                    RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
            END AS CIKIS_MIKTAR,
            CASE 
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                    RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                    RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                    RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                    RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                ELSE 
                    RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
            END AS BAKIYE
         FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
         AND SUBE_KODU IN (0)
        LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
        LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
        LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
        WHERE 1=1 
        AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)
			  AND STOK_KODU=@string1       
        GROUP BY 
        STOK_KODU,STOK_ADI
        ) AS DATA WHERE 1=1
        ';

    Result = str1;
}
// CheckBoxKodYerineIsimGelsin.IsChecked==True
function getSQLStokBakiye_6(string1,string3):String;
var
  str1:String;
{
    str1 = '
              DECLARE @string1 AS VARCHAR(20)= ' + QuotedStr(string1) + ';
              DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
              SELECT * FROM (
              SELECT 
                  STOK_KODU, 
                  STOK_ADI AS STOK_ADI,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS GIRIS_MIKTAR,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS CIKIS_MIKTAR,
                  CASE 
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
                  END AS BAKIYE
               FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
               AND SUBE_KODU IN (0)
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
              LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
              WHERE 1=1 
              AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)
              AND STOK_KODU=@string1
              GROUP BY 
              STOK_KODU,STOK_ADI
              ) AS DATA WHERE 1=1
              ';

    Result = str1;
}
// CheckBoxStokYazilanIsimGelsin.IsChecked==True
function getSQLStokBakiye_7(string1,string3):String;
var
  str1:String;
{
    str1 = '
              DECLARE @string1 AS VARCHAR(20)= ' + QuotedStr(string1) + ';
              DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
              SELECT * FROM (
              SELECT 
                  STOK_KODU, 
                  STOK_ADI AS STOK_ADI,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS GIRIS_MIKTAR,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS CIKIS_MIKTAR,
                  CASE 
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
                  END AS BAKIYE
               FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
               AND SUBE_KODU IN (0)
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
              LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
              WHERE 1=1 
              AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)
              AND STOK_KODU=@string1
              GROUP BY 
              STOK_KODU,STOK_ADI
              ) AS DATA WHERE 1=1
              ';

    Result = str1;
}
// CheckBoxHizmetStoklariHaric.IsChecked==True
function getSQLStokBakiye_8(string1,string3):String;
var
  str1:String;
{
    str1 = '
              DECLARE @string1 AS VARCHAR(20)= ' + QuotedStr(string1) + ';
              DECLARE @string3 AS VARCHAR(20)= ' + QuotedStr(string3) + ';
              SELECT * FROM (
              SELECT 
                  STOK_KODU, 
                  STOK_ADI AS STOK_ADI,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS GIRIS_MIKTAR,
                  CASE 
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(SUM(CASE WHEN TBLSTOKHR.GC_ISLEM=-1 AND TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END), ''N2'', ''tr-TR''), 14)
                  END AS CIKIS_MIKTAR,
                  CASE 
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9.99 THEN 
                          RIGHT(SPACE(18) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 18)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 99.99 THEN 
                          RIGHT(SPACE(17) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 17)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 999.99 THEN 
                          RIGHT(SPACE(16) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 16)
                      WHEN ABS(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0)) <= 9999.99 THEN 
                          RIGHT(SPACE(15) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 15)
                      ELSE 
                          RIGHT(SPACE(14) + FORMAT(ISNULL(SUM(CASE WHEN TBLSTOKHR.SUBE_KODU IN(0) THEN TBLSTOKHR.GCMIK ELSE 0 END * TBLSTOKHR.GC_ISLEM), 0), ''N2'', ''tr-TR''), 14)
                  END AS BAKIYE
               FROM TBLSTOKSB INNER JOIN TBLSTOKHR ON TBLSTOKSB.REC_NO=TBLSTOKHR.STOK_KODU_RECID
               AND SUBE_KODU IN (0)
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR) AS HRG ON HRG.REC_NO=TBLSTOKHR.REC_NO AND HRG.GC_ISLEM=1
              LEFT JOIN (SELECT REC_NO,GC_ISLEM,GCMIK,STOK_NF,STOK_BF,ISK_FF_FARK FROM TBLSTOKHR ) AS HRC ON HRC.REC_NO=TBLSTOKHR.REC_NO AND HRC.GC_ISLEM=-1
              LEFT JOIN TBLSTOKBELGETIPSB ON TBLSTOKBELGETIPSB.BELGE_TIPI=TBLSTOKHR.BELGE_TIPI
              WHERE 1=1
              AND TRY_CONVERT(DATE, TBLSTOKHR.TARIH, 104) <= TRY_CONVERT(DATE, @string3, 104)
              AND STOK_KODU=@string1
              AND TBLSTOKSB.STOK_TIPI<>''Z''
              GROUP BY 
              STOK_KODU,STOK_ADI
              ) AS DATA WHERE 1=1
              ';

    Result = str1;
}
// STOK BAKİYE DETAY KISMI
function getSQLStokBakiye_Detay(stringdetay):String;
var
  str1:String;
{
    str1 = '
    DECLARE @detay AS VARCHAR(20) = ' + QuotedStr(stringdetay) + ';
    SELECT 
    FORMAT(TARIH, ''dd.MM.yyyy'', ''tr-TR'') AS TARIH,
    PRG_VIEW_STHR.BELGE_NO,
    EVRAK_NO,
    CASE
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 1 THEN ''Satış Faturası''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 2 THEN ''Alış Faturası''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 3 THEN ''Satış İrsaliyesi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 4 THEN ''Alış İrsaliyesi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 21 THEN ''Alıcı Siparişi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 22 THEN ''Satıcı Siparişi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 31 THEN ''Satış Teklifi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 32 THEN ''Alım Teklifi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 41 THEN ''Alış Talep''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 42 THEN ''İhaleli Satım Talep''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 45 THEN ''Sevk Emir Kayıtları''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 50 THEN ''Depo Sarf Çıkış Fişi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 51 THEN ''Depo Sarf Giriş Fişi''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 60 THEN ''Üretime Çıkış Kayıtları''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 61 THEN ''Üretim Sonu Girişleri''
        WHEN PRG_VIEW_STHR.BELGE_TIPI = 101 THEN ''Diğer Satış Faturalama''
        ELSE ''''
    END AS BELGE_TIPI,
    CASE 
        WHEN ABS(GIREN_MIKTAR) <= 9.99 THEN RIGHT(SPACE(16) + FORMAT(GIREN_MIKTAR, ''N2'', ''tr-TR''), 16)
        WHEN ABS(GIREN_MIKTAR) <= 99.99 THEN RIGHT(SPACE(15) + FORMAT(GIREN_MIKTAR, ''N2'', ''tr-TR''), 15)
        WHEN ABS(GIREN_MIKTAR) <= 999.99 THEN RIGHT(SPACE(14) + FORMAT(GIREN_MIKTAR, ''N2'', ''tr-TR''), 14)
        WHEN ABS(GIREN_MIKTAR) <= 9999.99 THEN RIGHT(SPACE(13) + FORMAT(GIREN_MIKTAR, ''N2'', ''tr-TR''), 13)
        ELSE RIGHT(SPACE(12) + FORMAT(GIREN_MIKTAR, ''N2'', ''tr-TR''), 12)
    END AS GIREN_NET,
    CASE 
        WHEN ABS(CIKAN_MIKTAR) <= 9.99 THEN RIGHT(SPACE(16) + FORMAT(CIKAN_MIKTAR, ''N2'', ''tr-TR''), 16)
        WHEN ABS(CIKAN_MIKTAR) <= 99.99 THEN RIGHT(SPACE(15) + FORMAT(CIKAN_MIKTAR, ''N2'', ''tr-TR''), 15)
        WHEN ABS(CIKAN_MIKTAR) <= 999.99 THEN RIGHT(SPACE(14) + FORMAT(CIKAN_MIKTAR, ''N2'', ''tr-TR''), 14)
        WHEN ABS(CIKAN_MIKTAR) <= 9999.99 THEN RIGHT(SPACE(13) + FORMAT(CIKAN_MIKTAR, ''N2'', ''tr-TR''), 13)
        ELSE RIGHT(SPACE(12) + FORMAT(CIKAN_MIKTAR, ''N2'', ''tr-TR''), 12)
    END AS CIKIS_NET,
    CASE 
        WHEN ABS(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING)) <= 9.99 THEN 
            RIGHT(SPACE(16) + FORMAT(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING), ''N2'', ''tr-TR''), 16)
        WHEN ABS(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING)) <= 99.99 THEN 
            RIGHT(SPACE(15) + FORMAT(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING), ''N2'', ''tr-TR''), 15)
        WHEN ABS(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING)) <= 999.99 THEN 
            RIGHT(SPACE(14) + FORMAT(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING), ''N2'', ''tr-TR''), 14)
        WHEN ABS(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING)) <= 9999.99 THEN 
            RIGHT(SPACE(13) + FORMAT(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING), ''N2'', ''tr-TR''), 13)
        ELSE 
            RIGHT(SPACE(12) + FORMAT(SUM(GIREN_MIKTAR - CIKAN_MIKTAR) OVER (PARTITION BY STOK_KODU ORDER BY TARIH, GCKOD DESC, REC_NO ROWS UNBOUNDED PRECEDING), ''N2'', ''tr-TR''), 12)
    END AS BAKIYE,
    CARI_ADI, 
    CASE 
        WHEN ABS(STOK_NF) <= 9.99 THEN RIGHT(SPACE(16) + FORMAT(STOK_NF, ''N2'', ''tr-TR''), 16)
        WHEN ABS(STOK_NF) <= 99.99 THEN RIGHT(SPACE(15) + FORMAT(STOK_NF, ''N2'', ''tr-TR''), 15)
        ELSE RIGHT(SPACE(14) + FORMAT(STOK_NF, ''N2'', ''tr-TR''), 14)
    END AS STOK_NF,
    CASE 
        WHEN ABS(NET_TUTAR) <= 9.99 THEN RIGHT(SPACE(16) + FORMAT(NET_TUTAR, ''N2'', ''tr-TR''), 16)
        WHEN ABS(NET_TUTAR) <= 99.99 THEN RIGHT(SPACE(15) + FORMAT(NET_TUTAR, ''N2'', ''tr-TR''), 15)
        ELSE RIGHT(SPACE(14) + FORMAT(NET_TUTAR, ''N2'', ''tr-TR''), 14)
    END AS NET_TUTAR,
    CASE 
        WHEN ABS(STOK_BF) <= 9.99 THEN RIGHT(SPACE(16) + FORMAT(STOK_BF, ''N2'', ''tr-TR''), 16)
        WHEN ABS(STOK_BF) <= 99.99 THEN RIGHT(SPACE(15) + FORMAT(STOK_BF, ''N2'', ''tr-TR''), 15)
        ELSE RIGHT(SPACE(14) + FORMAT(STOK_BF, ''N2'', ''tr-TR''), 14)
    END AS BIRIM_FIYAT,
    KDV_ORANI,
    CASE 
        WHEN DEPO_KODU = 0 THEN '''' 
        ELSE CAST(DEPO_KODU AS VARCHAR)
    END AS DEPO_KODU,
    KAYIT_ACIKLAMA,
    CASE 
        WHEN LEN(CAST(REC_NO AS VARCHAR)) <= 4 THEN RIGHT(SPACE(16) + CAST(REC_NO AS VARCHAR), 16)
        WHEN LEN(CAST(REC_NO AS VARCHAR)) BETWEEN 5 AND 8 THEN RIGHT(SPACE(15) + CAST(REC_NO AS VARCHAR), 15)
        ELSE RIGHT(SPACE(14) + CAST(REC_NO AS VARCHAR), 14)
    END AS STOKHR_RECNO,
    CASE 
        WHEN ABS(MALIYET_NF) <= 9.99 THEN RIGHT(SPACE(16) + FORMAT(MALIYET_NF, ''N2'', ''tr-TR''), 16)
        WHEN ABS(MALIYET_NF) <= 99.99 THEN RIGHT(SPACE(15) + FORMAT(MALIYET_NF, ''N2'', ''tr-TR''), 15)
        ELSE RIGHT(SPACE(14) + FORMAT(MALIYET_NF, ''N2'', ''tr-TR''), 14)
    END AS MALIYET_NET,
    FORMAT(HAREKET_MALIYET_FIYATI, ''N2'', ''tr-TR'') AS HAREKET_MALIYET_FIYATI,
    STOK_YAZILAN_ISIM
    FROM 
    PRG_VIEW_STHR
    WHERE 
    STOK_KODU = @detay 
    AND SUBE_KODU IN (SUBE_KODU) /*[PrgMerkezSubeGenelKisit_A]*/
    ORDER BY 
    TARIH, GCKOD DESC, REC_NO;

    ';

    Result = str1;
}




//uStokBakiyeRporu

uses uSQLData;
uses uBilesenler;
uses uStokBakiyeRaporuFiltreleme;

var
  MyForm3:TclForm;
  Lbl_StokBakiye2:TClProLabel;
  SQL_StokBakiye : TClSqlQuery;
  MyGrid: TclStringGrid;
  Str_StokKodu,Str_DateEdit:String;


void MyFormTransfer_Detay;
{
  Clomosy.RunUnit('uStokBakiyeDetay');
}

void SetupGridColumns_StokBakiyeRaporu;
{
  MyGrid.Columns[0].Header = 'Stok Kodu';
  MyGrid.Columns[1].Header = 'Stok Adı';
  MyGrid.Columns[2].Header = '           Giriş Miktar';
  MyGrid.Columns[3].Header = '           Çıkış Miktar';
  MyGrid.Columns[4].Header = '                    Bakiye';
}

void AddDataToGrid_StokBakiye;
{

    if (Edt_StokKodu.Text == '') 
    {
        Str_DateEdit = DtEdt1.DateStr;
        
        SQL_StokBakiye.SQL.Text = uSQLData.getSQLStokBakiye_1(Str_DateEdit);
        
            
            if(ChBox_3.IsChecked==True)
            {
              Str_DateEdit = DtEdt1.DateStr;
              SQL_StokBakiye.SQL.Text = uSQLData.getSQLStokBakiye_4(Str_DateEdit);
            }
    }
    
    
    // FİLTRELEME İŞLEMİ YAPILMIŞ İSE
    else
    {
        Str_StokKodu = Edt_StokKodu.Text; 
        Str_DateEdit = DtEdt1.DateStr;
        SQL_StokBakiye.SQL.Text = uSQLData.getSQLStokBakiye_5(Str_StokKodu,Str_DateEdit);
      
      
      
      if(ChBox_3.IsChecked==True)
      {
              Str_StokKodu = Edt_StokKodu.Text;
              Str_DateEdit = DtEdt1.DateStr;
              SQL_StokBakiye.SQL.Text = uSQLData.getSQLStokBakiye_8(Str_StokKodu,Str_DateEdit);
      }
    }

    SQL_StokBakiye.Open;
    if (SQL_StokBakiye.Found)
    {
        MyForm3.RemoveGridBinding('mylink');
        MyForm3.AddNewGridBinding(MyGrid, SQL_StokBakiye, 'mylink');
        SetupGridColumns_StokBakiyeRaporu;

        Lbl_StokBakiye2 = uBilesenler.StokBakiye_Labeller(MyForm3, 'Lbl_StokBakiye2', 'STOK BAKİYE RAPORU',0,0,0,100,30,35,'#a31231',20,fsBold);
        Lbl_StokBakiye2.Align = alTop;
        Lbl_StokBakiye2.Clprosettings.BorderColor = clalphacolor.clHextocolor('#c4c4c4');
        Lbl_StokBakiye2.clprosettings.FontVertAlign = palcenter;
        Lbl_StokBakiye2.clprosettings.FontHorzAlign = palcenter;

        MyGrid.Columns[0].Width = 300;
        MyGrid.Columns[1].Width = 250;
        MyGrid.Columns[2].Width = 120;
        MyGrid.Columns[3].Width = 120;
        MyGrid.Columns[4].Width = 120;
    }
    else
    {
        ShowMessage('Kayıt bulunamadı!');
    }
}

{
    MyForm3 = TclForm.Create(Self);
    MyForm3.SetFormColor('#c4c4c4', '#c4c4c4', clGVertical);
    
    MyGrid = MyForm3.AddNewStringGrid(MyForm3,'MyGrid');
    MyGrid.Align = alClient;
    MyGrid.ReadOnly = TRUE;
    
    MyForm3.AddNewEvent(MyGrid,tbeOnGridCellClick,'MyFormTransfer_Detay');
    
    SQL_StokBakiye = TClSqlQuery.Create(nil);
    SQL_StokBakiye.Connection = Clomosy.DBSQLServerConnection;
    
    AddDataToGrid_StokBakiye;
    
    MyForm3.Run;
}




// uStokBakiyeRaporu_Filtresiz

var
  MyForm : TclForm;
  MyGrid2 : TclStringGrid;
  SQ_StokBakiye : TClSqlQuery;
  Lbl_StokBakiye:TClProLabel;

void SetupGridColumns_StokBakiyeRaporu;
{
  MyGrid2.Columns[0].Header = 'Stok Kodu';
  MyGrid2.Columns[1].Header = 'Stok Adı';
  MyGrid2.Columns[2].Header = '        Giriş Miktar';
  MyGrid2.Columns[3].Header = '        Çıkış Miktar';
  MyGrid2.Columns[4].Header = '                  Bakiye';
}
void AddDataToGrid_StokBakiye;
{
    SQ_StokBakiye.SQL.Text = uSQLData.getSQLStokBakiye;
    SQ_StokBakiye.Open;
    if (SQ_StokBakiye.Found)
    {
        MyForm.RemoveGridBinding('mylink');
        MyForm.AddNewGridBinding(MyGrid2, SQ_StokBakiye, 'mylink');
        SetupGridColumns_StokBakiyeRaporu;

        Lbl_StokBakiye = uBilesenler.uAnaKodLabeller(MyForm, 'Lbl_StokBakiye', 'STOK BAKİYE RAPORU',0,0,0,0,30,35,'#c4c4c4','#c4c4c4','#a31231',20,palcenter,palcenter,fsBold);
        Lbl_StokBakiye.Align = alTop;

        MyGrid2.Columns[0].Width = 160;
        MyGrid2.Columns[1].Width = 250;
        MyGrid2.Columns[2].Width = 110;
        MyGrid2.Columns[3].Width = 110;
        MyGrid2.Columns[4].Width = 110;
    }
    else
    {
        ShowMessage('Kayıt bulunamadı!');
    }
}

{
    MyForm = TclForm.Create(Self);
    MyForm.SetFormColor('#c4c4c4', '#c4c4c4', clGVertical);

    MyGrid2 = MyForm.AddNewStringGrid(MyForm, 'MyGrid2');
    MyGrid2.Align = alClient;
    MyGrid2.ReadOnly = TRUE;

    SQ_StokBakiye = TClSqlQuery.Create(nil);

    SQ_StokBakiye.Connection = Clomosy.DBSQLServerConnection;

    AddDataToGrid_StokBakiye;

    MyForm.Run;
}




// uStokBakiyeRaporuFiltreleme 

uses uSQLData;
uses uBilesenler;

var
  MyForm1:TclForm;
  Btn_StokBakiye,Btn_StokKodu:TClProButton;
  DtEdt1: TClProDateEdit;
  Lbl_StokBakiye,Lbl_OzelSecenekler,Lbl_Tarih,Lbl_StokKodu,Lbl_StokAdi,Lbl_HizmetStoklariHaric:TClProLabel;
  Edt_StokKodu,Edt_StokAdi:TclProEdit;
  ChBox_1,ChBox_2,ChBox_3:TCLCheckBox;



void SetTestDate;
{
  DtEdt1 = uBilesenler.DateEdit(MyForm1,'DtEdt1',0,340,0,60,130,25,'#323d8c','#ffffff',palcenter,fsBold,14);
}


// EVET HAYIR CHECKBOX'LARA TIKLAYINCA DEĞİŞEN FONKSİYONLAR

void OnChange_HizmetStoklariHaric;
{
    if ChBox_3.Text == 'Hayır' 
    {
        ChBox_3.Text = 'Evet';
        ChBox_3.IsChecked = False;
    }
    else 
    {
        ChBox_3.Text = 'Hayır';
        ChBox_3.IsChecked = True;
    }
}


void MyFormTransferStokBakiyeStokKodu;
{
  clomosy.RunUnit('uStokBakiyeStokKodu');
}
void MyFormTransferStokBakiye;
{
  clomosy.RunUnit('uStokBakiyeRaporu');
}






{
  MyForm1=TclForm.Create(Self);
  MyForm1.SetFormColor('#c4c4c4', '#c4c4c4', clGVertical);

  SetTestDate;
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //  
  Btn_StokBakiye = uBilesenler.Stok_Buttonlar(MyForm1,'Btn_StokBakiye','',100,0,0,0,150,50,'#2bcf25','#000000',10,10,2,12,'https://r.resimlink.com/Gop6mlX.jpg');
  Btn_StokBakiye.Align = alCenter;
  Btn_StokKodu = uBilesenler.Stok_Buttonlar(MyForm1,'Btn_StokKodu','',0,520,140,0,30,20,'#d6cdcd','#000000',5,5,2,12,'https://r.resimlink.com/Lc7idXsx.jpg');
  Btn_StokKodu.Align = alCenter;
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
  Edt_StokKodu = uBilesenler.StokBakiye_Editler(MyForm1,'Edt_StokKodu','',0,520,0,150,220);
  Edt_StokKodu.Align = alCenter;
  Edt_StokAdi = uBilesenler.StokBakiye_Editler(MyForm1,'Edt_StokAdi','',0,450,0,150,220);
  Edt_StokAdi.Align = alCenter;
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //

  ChBox_3 = uBilesenler.CheckBoxlar_StokBakiye(MyForm1, 'ChBox_3', 'Hayır',0,100,0,40,100,50,ssFamily,12,'#000000',fsItalic);
  ChBox_3.Align = alCenter;
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
  Lbl_StokBakiye = uBilesenler.StokBakiye_Labeller(MyForm1,'Lbl_StokBakiye','STOK BAKİYE RAPORU',0,0,0,60,30,35,'#a31231',26,fsBold);
  Lbl_StokBakiye.Align = alTop;
  Lbl_StokBakiye.clprosettings.FontVertAlign = palcenter;
  Lbl_StokBakiye.clprosettings.FontHorzAlign = palcenter;
  Lbl_OzelSecenekler = uBilesenler.StokBakiye_Labeller(MyForm1,'Lbl_OzelSecenekler','Özel Seçenekler',0,600,210,0,160,28,'#ea7457',20,fsBold);
  Lbl_OzelSecenekler.Align = alCenter;
  Lbl_StokKodu = uBilesenler.StokBakiye_Labeller(MyForm1,'Lbl_StokKodu','Stok Kodu',0,520,300,0,70,15,'#000000',12,fsBold);
  Lbl_StokAdi = uBilesenler.StokBakiye_Labeller(MyForm1,'Lbl_StokAdi','Stok Adı',0,450,190,0,180,15,'#000000',12,fsBold);
  Lbl_Tarih = uBilesenler.StokBakiye_Labeller(MyForm1,'Lbl_Tarih','Baz Tarih',0,340,190,0,180,15,'#000000',12,fsBold);
  Lbl_HizmetStoklariHaric = uBilesenler.StokBakiye_Labeller(MyForm1,'Lbl_HizmetStoklariHaric','Hizmet Stokları Hariç',0,100,190,0,180,15,'#000000',12,fsBold);
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //  
  MyForm1.AddNewEvent(Btn_StokBakiye,tbeOnClick,'MyFormTransferStokBakiye');
  MyForm1.AddNewEvent(Btn_StokKodu,tbeOnClick,'MyFormTransferStokBakiyeStokKodu');
  MyForm1.AddNewEvent(ChBox_3,tbeOnClick,'OnChange_HizmetStoklariHaric');

  MyForm1.Run;
}



// uStokBakiyeStokKodu


uses uSQLData;
uses uBilesenler;

var
  MyForm1:TclForm;
  Btn_StokBakiye,Btn_StokKodu:TClProButton;
  DtEdt1: TClProDateEdit;
  Lbl_StokBakiye,Lbl_OzelSecenekler,Lbl_Tarih,Lbl_StokKodu,Lbl_StokAdi,Lbl_HizmetStoklariHaric:TClProLabel;
  Edt_StokKodu,Edt_StokAdi:TclProEdit;
  ChBox_1,ChBox_2,ChBox_3:TCLCheckBox;



void SetTestDate;
{
  DtEdt1 = uBilesenler.DateEdit(MyForm1,'DtEdt1',0,340,0,60,130,25,'#323d8c','#ffffff',palcenter,fsBold,14);
}


// EVET HAYIR CHECKBOX'LARA TIKLAYINCA DEĞİŞEN FONKSİYONLAR

void OnChange_HizmetStoklariHaric;
{
    if ChBox_3.Text == 'Hayır' 
    {
        ChBox_3.Text = 'Evet';
        ChBox_3.IsChecked = False;
    }
    else 
    {
        ChBox_3.Text = 'Hayır';
        ChBox_3.IsChecked = True;
    }
}


void MyFormTransferStokBakiyeStokKodu;
{
  clomosy.RunUnit('uStokBakiyeStokKodu');
}
void MyFormTransferStokBakiye;
{
  clomosy.RunUnit('uStokBakiyeRaporu');
}






{
  MyForm1=TclForm.Create(Self);
  MyForm1.SetFormColor('#c4c4c4', '#c4c4c4', clGVertical);

  SetTestDate;
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //  
  Btn_StokBakiye = uBilesenler.Stok_Buttonlar(MyForm1,'Btn_StokBakiye','',100,0,0,0,150,50,'#2bcf25','#000000',10,10,2,12,'https://r.resimlink.com/Gop6mlX.jpg');
  Btn_StokBakiye.Align = alCenter;
  Btn_StokKodu = uBilesenler.Stok_Buttonlar(MyForm1,'Btn_StokKodu','',0,520,140,0,30,20,'#d6cdcd','#000000',5,5,2,12,'https://r.resimlink.com/Lc7idXsx.jpg');
  Btn_StokKodu.Align = alCenter;
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
  Edt_StokKodu = uBilesenler.StokBakiye_Editler(MyForm1,'Edt_StokKodu','',0,520,0,150,220);
  Edt_StokKodu.Align = alCenter;
  Edt_StokAdi = uBilesenler.StokBakiye_Editler(MyForm1,'Edt_StokAdi','',0,450,0,150,220);
  Edt_StokAdi.Align = alCenter;
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //

  ChBox_3 = uBilesenler.CheckBoxlar_StokBakiye(MyForm1, 'ChBox_3', 'Hayır',0,100,0,40,100,50,ssFamily,12,'#000000',fsItalic);
  ChBox_3.Align = alCenter;
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
  Lbl_StokBakiye = uBilesenler.StokBakiye_Labeller(MyForm1,'Lbl_StokBakiye','STOK BAKİYE RAPORU',0,0,0,60,30,35,'#a31231',26,fsBold);
  Lbl_StokBakiye.Align = alTop;
  Lbl_StokBakiye.clprosettings.FontVertAlign = palcenter;
  Lbl_StokBakiye.clprosettings.FontHorzAlign = palcenter;
  Lbl_OzelSecenekler = uBilesenler.StokBakiye_Labeller(MyForm1,'Lbl_OzelSecenekler','Özel Seçenekler',0,600,210,0,160,28,'#ea7457',20,fsBold);
  Lbl_OzelSecenekler.Align = alCenter;
  Lbl_StokKodu = uBilesenler.StokBakiye_Labeller(MyForm1,'Lbl_StokKodu','Stok Kodu',0,520,300,0,70,15,'#000000',12,fsBold);
  Lbl_StokAdi = uBilesenler.StokBakiye_Labeller(MyForm1,'Lbl_StokAdi','Stok Adı',0,450,190,0,180,15,'#000000',12,fsBold);
  Lbl_Tarih = uBilesenler.StokBakiye_Labeller(MyForm1,'Lbl_Tarih','Baz Tarih',0,340,190,0,180,15,'#000000',12,fsBold);
  Lbl_HizmetStoklariHaric = uBilesenler.StokBakiye_Labeller(MyForm1,'Lbl_HizmetStoklariHaric','Hizmet Stokları Hariç',0,100,190,0,180,15,'#000000',12,fsBold);
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //  
  MyForm1.AddNewEvent(Btn_StokBakiye,tbeOnClick,'MyFormTransferStokBakiye');
  MyForm1.AddNewEvent(Btn_StokKodu,tbeOnClick,'MyFormTransferStokBakiyeStokKodu');
  MyForm1.AddNewEvent(ChBox_3,tbeOnClick,'OnChange_HizmetStoklariHaric');

  MyForm1.Run;
}








